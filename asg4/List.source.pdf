%PDF-1.4
5 0 obj
<</Length 6 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/29/14)Tj
-0.659766 -12.8 Td
(14:35:18)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 281.711 736.5 Tm
(astree.cc)Tj
-121.509 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(#include <assert.h>)]TJ
12 TL
T*[(2:)-600(#include <inttypes.h>)]TJ
T*[(3:)-600(#include <stdarg.h>)]TJ
T*[(4:)-600(#include <stdio.h>)]TJ
T*[(5:)-600(#include <stdlib.h>)]TJ
T*[(6:)-600(#include <string.h>)]TJ
(7:)'
T*[(8:)-600(#include "astree.h")]TJ
T*[(9:)-600(#include "stringset.h")]TJ
-6.6 -12 Td
[(10:)-600(#include "lyutils.h")]TJ
(11:)'
T*[(12:)-600(astree* new_astree \(int symbol, int filenr, int linenr,)]TJ
T*[(13:)-600(        int offset, const char* lexinfo\) {)]TJ
T*[(14:)-600(    astree* tree = new astree\(\);)]TJ
T*[(15:)-600(    tree->symbol = symbol;)]TJ
T*[(16:)-600(    tree->filenr = filenr;)]TJ
T*[(17:)-600(    tree->linenr = linenr;)]TJ
T*[(18:)-600(    tree->offset = offset;)]TJ
T*[(19:)-600(    tree->blocknr = 0;)]TJ
T*[(20:)-600(    tree->attributes = 0;)]TJ
T*[(21:)-600(    tree->struct_node = NULL;)]TJ
T*[(22:)-600(    tree->lexinfo = intern_stringset \(lexinfo\);)]TJ
T*[(23:)-600(    DEBUGF \('f', "astree %p->{%d:%d.%d: %s: \\"%s\\"}\\n",)]TJ
T*[(24:)-600(            tree, tree->filenr, tree->linenr, tree->offset,)]TJ
T*[(25:)-600(            get_yytname \(tree->symbol\), tree->lexinfo->c_str\(\)\);)]TJ
T*[(26:)-600(    return tree;)]TJ
T*[(27:)-600(})]TJ
(28:)'
T*[(29:)-600(astree* adopt1 \(astree* root, astree* child\) {)]TJ
T*[(30:)-600(    root->children.push_back \(child\);)]TJ
T*[(31:)-600(    DEBUGF \('a', "%p \(%s\) adopting %p \(%s\)\\n",)]TJ
T*[(32:)-600(            root, root->lexinfo->c_str\(\),)]TJ
T*[(33:)-600(            child, child->lexinfo->c_str\(\)\);)]TJ
T*[(34:)-600(    return root;)]TJ
T*[(35:)-600(})]TJ
(36:)'
T*[(37:)-600(astree* adopt2 \(astree* root, astree* left, astree* right\) {)]TJ
T*[(38:)-600(    adopt1 \(root, left\);)]TJ
T*[(39:)-600(    adopt1 \(root, right\);)]TJ
T*[(40:)-600(    return root;)]TJ
T*[(41:)-600(})]TJ
(42:)'
T*[(43:)-600(astree* adopt3 \(astree* root, astree* one, astree* two, astree* three\) {)]TJ
T*[(44:)-600(    adopt1 \(root, one\);)]TJ
T*[(45:)-600(    adopt1 \(root, two\);)]TJ
T*[(46:)-600(    adopt1 \(root, three\);)]TJ
T*[(47:)-600(    return root;)]TJ
T*[(48:)-600(})]TJ
(49:)'
T*[(50:)-600(astree* adopt1sym \(astree* root, astree* child, int symbol\) {)]TJ
T*[(51:)-600(    root = adopt1 \(root, child\);)]TJ
T*[(52:)-600(    root->symbol = symbol;)]TJ
T*[(53:)-600(    return root;)]TJ
T*[(54:)-600(})]TJ
(55:)'
T*[(56:)-600(astree* adopt2sym \(astree* root,)]TJ
T*[(57:)-600(            astree* left, astree* right, int symbol\) {)]TJ
T*[(58:)-600(    root = adopt1 \(root, left\);)]TJ
ET
Q
Q
endstream
endobj
6 0 obj
3052
endobj
19 0 obj
<</Length 20 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/29/14)Tj
-0.659766 -12.8 Td
(14:35:18)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 281.711 736.5 Tm
(astree.cc)Tj
-121.509 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
[(59:)-600(    root = adopt1 \(root, right\);)]TJ
12 TL
T*[(60:)-600(    root->symbol = symbol;)]TJ
T*[(61:)-600(    return root;)]TJ
T*[(62:)-600(})]TJ
(63:)'
T*[(64:)-600(astree* adopt3sym \(astree* root, astree* one, astree* two,)]TJ
T*[(65:)-600(                   astree* three, int symbol\) {)]TJ
T*[(66:)-600(    root = adopt1 \(root, one\);)]TJ
T*[(67:)-600(    root = adopt1 \(root, two\);)]TJ
T*[(68:)-600(    root = adopt1 \(root, three\);)]TJ
T*[(69:)-600(    root->symbol = symbol;)]TJ
T*[(70:)-600(    return root;)]TJ
T*[(71:)-600(})]TJ
(72:)'
T*[(73:)-600(static void dump_node \(FILE* outfile, astree* node\) {)]TJ
T*[(74:)-600(    fprintf \(outfile, "%4lu%4lu.%.03lu %4d  %-15s \(%s\)\\n",)]TJ
T*[(75:)-600(            node->filenr, node->linenr, node->offset,)]TJ
T*[(76:)-600(            node->symbol, get_yytname\(node->symbol\),)]TJ
T*[(77:)-600(            node->lexinfo->c_str\(\)\);)]TJ
T*[(78:)-600(    bool need_space = false;)]TJ
T*[(79:)-600(    for \(size_t child = 0; child < node->children.size\(\);)]TJ
T*[(80:)-600(            ++child\) {)]TJ
T*[(81:)-600(        if \(need_space\) fprintf \(outfile, " "\);)]TJ
T*[(82:)-600(        need_space = true;)]TJ
T*[(83:)-600(        fprintf \(outfile, "%p", node->children.at\(child\)\);)]TJ
T*[(84:)-600(    })]TJ
T*[(85:)-600(})]TJ
(86:)'
T*[(87:)-600(static void dump_astree_rec \(FILE* outfile, astree* root,)]TJ
T*[(88:)-600(                             int depth\) {)]TJ
T*[(89:)-600(    if \(root == NULL\) return;)]TJ
T*[(90:)-600(    int i;)]TJ
T*[(91:)-600(    const char *tname = get_yytname \(root->symbol\);)]TJ
T*[(92:)-600(    if \(strstr \(tname, "TOK_"\) == tname\) tname += 4;)]TJ
T*[(93:)-600(    for \(i = 0; i < depth; i++\) fprintf\(outfile, "|  "\);)]TJ
T*[(94:)-600(    fprintf\(outfile, "%s \\"%s\\" %lu.%lu.%lu\\n", )]TJ
T*[(95:)-600(        tname, root->lexinfo->c_str\(\),)]TJ
T*[(96:)-600(        root->filenr, root->linenr, root->offset\); )]TJ
T*[(97:)-600(    /*fprintf \(outfile, "%*s%s\\n", depth * 3, "",)]TJ
T*[(98:)-600(        root->lexinfo->c_str\(\)\);*/)]TJ
T*[(99:)-600(    for \(size_t child = 0; child < root->children.size\(\); ++child\) {)]TJ
-6.6 -12 Td
[(100:)-600(      dump_astree_rec \(outfile, root->children[child], depth + 1\);)]TJ
T*[(101:)-600(   })]TJ
T*[(102:)-600(})]TJ
(103:)'
T*[(104:)-600(void dump_astree \(FILE* outfile, astree* root\) {)]TJ
T*[(105:)-600(    dump_astree_rec \(outfile, root, 0\);)]TJ
T*[(106:)-600(    fflush \(NULL\);)]TJ
T*[(107:)-600(})]TJ
(108:)'
T*[(109:)-600(void yyprint \(FILE* outfile, unsigned short toknum,)]TJ
T*[(110:)-600(        astree* yyvaluep\) {)]TJ
T*[(111:)-600(    if \(is_defined_token \(toknum\)\) {)]TJ
T*[(112:)-600(        dump_node \(outfile, yyvaluep\);)]TJ
T*[(113:)-600(    }else {)]TJ
T*[(114:)-600(        // handle error)]TJ
T*[(115:)-600(    })]TJ
T*[(116:)-600(    fflush \(NULL\);)]TJ
ET
Q
Q
endstream
endobj
20 0 obj
3413
endobj
24 0 obj
<</Length 25 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/29/14)Tj
-0.659766 -12.8 Td
(14:35:18)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 281.711 736.5 Tm
(astree.cc)Tj
-121.509 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-103.003 -36.5 Td
[(117:)-600(})]TJ
12 TL
(118:)'
T*[(119:)-600(void free_ast \(astree* root\) {)]TJ
T*[(120:)-600(    while \(not root->children.empty\(\)\) {)]TJ
T*[(121:)-600(        astree* child = root->children.back\(\);)]TJ
T*[(122:)-600(        root->children.pop_back\(\);)]TJ
T*[(123:)-600(        free_ast \(child\);)]TJ
T*[(124:)-600(    })]TJ
T*[(125:)-600(    DEBUGF \('f', "free [%p]-> %d:%d.%d: %s: \\"%s\\"\)\\n",)]TJ
T*[(126:)-600(            root, root->filenr, root->linenr, root->offset,)]TJ
T*[(127:)-600(            get_yytname \(root->symbol\), root->lexinfo->c_str\(\)\);)]TJ
T*[(128:)-600(    delete root;)]TJ
T*[(129:)-600(})]TJ
(130:)'
T*[(131:)-600(void free_ast \(astree* tree1, astree* tree2\) {)]TJ
T*[(132:)-600(    free_ast \(tree1\);)]TJ
T*[(133:)-600(    free_ast \(tree2\);)]TJ
T*[(134:)-600(})]TJ
(135:)'
T*[(136:)-600(void free_ast \(astree* tree1, astree* tree2,)]TJ
T*[(137:)-600(                astree* tree3\) {)]TJ
T*[(138:)-600(    free_ast \(tree1\);)]TJ
T*[(139:)-600(    free_ast \(tree2\);)]TJ
T*[(140:)-600(    free_ast \(tree3\);)]TJ
T*[(141:)-600(})]TJ
ET
Q
Q
endstream
endobj
25 0 obj
1618
endobj
29 0 obj
<</Length 30 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 280.528 736.5 Tm
(lyutils.cc)Tj
-120.325 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(#include <vector>)]TJ
12 TL
T*[(2:)-600(#include <string>)]TJ
T*[(3:)-600(using namespace std;)]TJ
(4:)'
T*[(5:)-600(#include <assert.h>)]TJ
T*[(6:)-600(#include <ctype.h>)]TJ
T*[(7:)-600(#include <stdio.h>)]TJ
T*[(8:)-600(#include <stdlib.h>)]TJ
T*[(9:)-600(#include <string.h>)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(#include "lyutils.h")]TJ
T*[(12:)-600(#include "auxlib.h")]TJ
T*[(13:)-600(#include "stringset.h")]TJ
(14:)'
T*[(15:)-600(astree* yyparse_astree = NULL;)]TJ
T*[(16:)-600(int scan_linenr = 1;)]TJ
T*[(17:)-600(int scan_offset = 0;)]TJ
T*[(18:)-600(bool scan_echo = false;)]TJ
T*[(19:)-600(vector<string> included_filenames;)]TJ
(20:)'
T*[(21:)-600(const string* scanner_filename \(int filenr\) {)]TJ
T*[(22:)-600(   return &included_filenames.at\(filenr\);)]TJ
T*[(23:)-600(})]TJ
(24:)'
T*[(25:)-600(void scanner_newfilename \(const char* filename\) {)]TJ
T*[(26:)-600(   included_filenames.push_back \(filename\);)]TJ
T*[(27:)-600(})]TJ
(28:)'
T*[(29:)-600(void scanner_newline \(void\) {)]TJ
T*[(30:)-600(   ++scan_linenr;)]TJ
T*[(31:)-600(   scan_offset = 0;)]TJ
T*[(32:)-600(})]TJ
(33:)'
T*[(34:)-600(void scanner_setecho \(bool echoflag\) {)]TJ
T*[(35:)-600(   scan_echo = echoflag;)]TJ
T*[(36:)-600(})]TJ
(37:)'
T*[(38:)-600(void scanner_useraction \(void\) {)]TJ
T*[(39:)-600(   if \(scan_echo\) {)]TJ
T*[(40:)-600(      if \(scan_offset == 0\) printf \(";%5d: ", scan_linenr\);)]TJ
T*[(41:)-600(      printf \("%s", yytext\);)]TJ
T*[(42:)-600(   })]TJ
T*[(43:)-600(   scan_offset += yyleng;)]TJ
T*[(44:)-600(})]TJ
(45:)'
T*[(46:)-600(void yyerror \(const char* message\) {)]TJ
T*[(47:)-600(   assert \(not included_filenames.empty\(\)\);)]TJ
T*[(48:)-600(   errprintf \("%:%s: %d: %s\\n",)]TJ
T*[(49:)-600(              included_filenames.back\(\).c_str\(\),)]TJ
T*[(50:)-600(              scan_linenr, message\);)]TJ
T*[(51:)-600(})]TJ
(52:)'
T*[(53:)-600(void scanner_badchar \(unsigned char bad\) {)]TJ
T*[(54:)-600(   char char_rep[16];)]TJ
T*[(55:)-600(   sprintf \(char_rep, isgraph \(bad\) ? "%c" : "\\\\%03o", bad\);)]TJ
T*[(56:)-600(   errprintf \("%:%s: %d: invalid source character \(%s\)\\n",)]TJ
T*[(57:)-600(              included_filenames.back\(\).c_str\(\),)]TJ
T*[(58:)-600(              scan_linenr, char_rep\);)]TJ
ET
Q
Q
endstream
endobj
30 0 obj
2799
endobj
34 0 obj
<</Length 35 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 280.528 736.5 Tm
(lyutils.cc)Tj
-120.325 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
[(59:)-600(})]TJ
12 TL
(60:)'
T*[(61:)-600(void scanner_badtoken \(char* lexeme\) {)]TJ
T*[(62:)-600(   errprintf \("%:%s: %d: invalid token \(%s\)\\n",)]TJ
T*[(63:)-600(              included_filenames.back\(\).c_str\(\),)]TJ
T*[(64:)-600(              scan_linenr, lexeme\);)]TJ
T*[(65:)-600(})]TJ
(66:)'
T*[(67:)-600(int yylval_token \(int symbol\) {)]TJ
T*[(68:)-600(   int offset = scan_offset - yyleng;)]TJ
T*[(69:)-600(   yylval = new_astree \(symbol, included_filenames.size\(\) - 1,)]TJ
T*[(70:)-600(                        scan_linenr, offset, yytext\);)]TJ
T*[(71:)-600(   yyprint\(tokfile, symbol, yylval\);)]TJ
T*[(72:)-600(   return symbol;)]TJ
T*[(73:)-600(})]TJ
(74:)'
T*[(75:)-600(astree* new_parseroot \(void\) {)]TJ
T*[(76:)-600(   yyparse_astree = new_astree \(TOK_ROOT, 0, 0, 0, ""\);)]TJ
T*[(77:)-600(   intern_stringset\(""\);)]TJ
T*[(78:)-600(   return yyparse_astree;)]TJ
T*[(79:)-600(})]TJ
(80:)'
T*[(81:)-600(void error_destructor \(astree* tree\) {)]TJ
T*[(82:)-600(   if \(tree == yyparse_astree\) return;)]TJ
T*[(83:)-600(   DEBUGSTMT \('a', dump_astree \(stderr, tree\); \);)]TJ
T*[(84:)-600(   free_ast \(tree\);)]TJ
T*[(85:)-600(})]TJ
(86:)'
T*[(87:)-600(void scanner_include \(void\) {)]TJ
T*[(88:)-600(   scanner_newline\(\);)]TJ
T*[(89:)-600(   char filename[strlen \(yytext\) + 1];)]TJ
T*[(90:)-600(   int linenr;)]TJ
T*[(91:)-600(   int scan_rc = sscanf \(yytext, "# %d \\"%[^\\"]\\"",)]TJ
T*[(92:)-600(                         &linenr, filename\);)]TJ
T*[(93:)-600(   if \(scan_rc != 2\) {)]TJ
T*[(94:)-600(      errprintf \("%: %d: [%s]: invalid directive, ignored\\n",)]TJ
T*[(95:)-600(                 scan_rc, yytext\);)]TJ
T*[(96:)-600(   } else {)]TJ
T*[(97:)-600(      fprintf \(tokfile, "# %d \\"%s\\"\\n", linenr, filename\);)]TJ
T*[(98:)-600(      scanner_newfilename \(filename\);)]TJ
T*[(99:)-600(      scan_linenr = linenr - 1;)]TJ
-6.6 -12 Td
[(100:)-600(      DEBUGF \('m', "filename=%s, scan_linenr=%d\\n",)]TJ
T*[(101:)-600(              included_filenames.back\(\).c_str\(\), scan_linenr\);)]TJ
T*[(102:)-600(   })]TJ
T*[(103:)-600(})]TJ
ET
Q
Q
endstream
endobj
35 0 obj
2627
endobj
39 0 obj
<</Length 40 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 280.535 736.5 Tm
(auxlib.cc)Tj
-120.332 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(#include <assert.h>)]TJ
T*[(3:)-600(#include <errno.h>)]TJ
T*[(4:)-600(#include <libgen.h>)]TJ
T*[(5:)-600(#include <limits.h>)]TJ
T*[(6:)-600(#include <stdarg.h>)]TJ
T*[(7:)-600(#include <stdio.h>)]TJ
T*[(8:)-600(#include <stdlib.h>)]TJ
T*[(9:)-600(#include <string.h>)]TJ
-6.6 -12 Td
[(10:)-600(#include <wait.h>)]TJ
(11:)'
T*[(12:)-600(#include "auxlib.h")]TJ
(13:)'
T*[(14:)-600(static int exitstatus = EXIT_SUCCESS;)]TJ
T*[(15:)-600(static const char* execname = NULL;)]TJ
T*[(16:)-600(static const char* localname = NULL;)]TJ
T*[(17:)-600(static const char* debugflags = "";)]TJ
T*[(18:)-600(static bool alldebugflags = false;)]TJ
(19:)'
T*[(20:)-600(void set_execname \(char* argv0\) {)]TJ
T*[(21:)-600(   execname = basename \(argv0\);)]TJ
T*[(22:)-600(})]TJ
(23:)'
T*[(24:)-600(const char* get_execname \(void\) {)]TJ
T*[(25:)-600(   assert \(execname != NULL\);)]TJ
T*[(26:)-600(   return execname;)]TJ
T*[(27:)-600(})]TJ
(28:)'
T*[(29:)-600(void set_localname \(char* filename\) {)]TJ
T*[(30:)-600(   localname = basename \(filename\);)]TJ
T*[(31:)-600(})]TJ
(32:)'
T*[(33:)-600(const char* get_localname \(void\) {)]TJ
T*[(34:)-600(   assert \(localname != NULL\);)]TJ
T*[(35:)-600(   return localname;)]TJ
T*[(36:)-600(})]TJ
(37:)'
T*[(38:)-600(static void eprint_signal \(const char* kind, int signal\) {)]TJ
T*[(39:)-600(   eprintf \(", %s %d", kind, signal\);)]TJ
T*[(40:)-600(   const char* sigstr = strsignal \(signal\);)]TJ
T*[(41:)-600(   if \(sigstr != NULL\) fprintf \(stderr, " %s", sigstr\);)]TJ
T*[(42:)-600(})]TJ
(43:)'
T*[(44:)-600(void eprint_status \(const char* command, int status\) {)]TJ
T*[(45:)-600(   if \(status == 0\) return; )]TJ
T*[(46:)-600(   eprintf \("%s: status 0x%04X", command, status\);)]TJ
T*[(47:)-600(   if \(WIFEXITED \(status\)\) {)]TJ
T*[(48:)-600(      eprintf \(", exit %d", WEXITSTATUS \(status\)\);)]TJ
T*[(49:)-600(   })]TJ
T*[(50:)-600(   if \(WIFSIGNALED \(status\)\) {)]TJ
T*[(51:)-600(      eprint_signal \("Terminated", WTERMSIG \(status\)\);)]TJ
T*[(52:)-600(      #ifdef WCOREDUMP)]TJ
T*[(53:)-600(      if \(WCOREDUMP \(status\)\) eprintf \(", core dumped"\);)]TJ
T*[(54:)-600(      #endif)]TJ
T*[(55:)-600(   })]TJ
T*[(56:)-600(   if \(WIFSTOPPED \(status\)\) {)]TJ
T*[(57:)-600(      eprint_signal \("Stopped", WSTOPSIG \(status\)\);)]TJ
T*[(58:)-600(   })]TJ
ET
Q
Q
endstream
endobj
40 0 obj
2936
endobj
44 0 obj
<</Length 45 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 280.535 736.5 Tm
(auxlib.cc)Tj
-120.332 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
[(59:)-600(   if \(WIFCONTINUED \(status\)\) {)]TJ
12 TL
T*[(60:)-600(      eprintf \(", Continued"\);)]TJ
T*[(61:)-600(   })]TJ
T*[(62:)-600(   eprintf \("\\n"\);)]TJ
T*[(63:)-600(})]TJ
(64:)'
ET
Q
Q
endstream
endobj
45 0 obj
725
endobj
49 0 obj
<</Length 50 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 280.535 736.5 Tm
(auxlib.cc)Tj
-120.332 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
(65:)Tj
12 TL
T*[(66:)-600(void veprintf \(const char* format, va_list args\) {)]TJ
T*[(67:)-600(   assert \(execname != NULL\);)]TJ
T*[(68:)-600(   assert \(format != NULL\);)]TJ
T*[(69:)-600(   fflush \(NULL\);)]TJ
T*[(70:)-600(   if \(strstr \(format, "%:"\) == format\) {)]TJ
T*[(71:)-600(      fprintf \(stderr, "%s: ", get_execname \(\)\);)]TJ
T*[(72:)-600(      format += 2;)]TJ
T*[(73:)-600(   })]TJ
T*[(74:)-600(   vfprintf \(stderr, format, args\);)]TJ
T*[(75:)-600(   fflush \(NULL\);)]TJ
T*[(76:)-600(})]TJ
(77:)'
T*[(78:)-600(void eprintf \(const char* format, ...\) {)]TJ
T*[(79:)-600(   va_list args;)]TJ
T*[(80:)-600(   va_start \(args, format\);)]TJ
T*[(81:)-600(   veprintf \(format, args\);)]TJ
T*[(82:)-600(   va_end \(args\);)]TJ
T*[(83:)-600(})]TJ
(84:)'
T*[(85:)-600(void errprintf \(const char* format, ...\) {)]TJ
T*[(86:)-600(   va_list args;)]TJ
T*[(87:)-600(   va_start \(args, format\);)]TJ
T*[(88:)-600(   veprintf \(format, args\);)]TJ
T*[(89:)-600(   va_end \(args\);)]TJ
T*[(90:)-600(   exitstatus = EXIT_FAILURE;)]TJ
T*[(91:)-600(})]TJ
(92:)'
T*[(93:)-600(void syserrprintf \(const char* object\) {)]TJ
T*[(94:)-600(   errprintf \("%:%s: %s\\n", object, strerror \(errno\)\);)]TJ
T*[(95:)-600(})]TJ
(96:)'
T*[(97:)-600(int get_exitstatus \(void\) {)]TJ
T*[(98:)-600(   return exitstatus;)]TJ
T*[(99:)-600(})]TJ
-6.6 -12 Td
(100:)Tj
T*[(101:)-600(void set_exitstatus \(int newexitstatus\) {)]TJ
T*[(102:)-600(   if \(exitstatus < newexitstatus\) exitstatus = newexitstatus;)]TJ
T*[(103:)-600(   DEBUGF \('x', "exitstatus = %d\\n", exitstatus\);)]TJ
T*[(104:)-600(})]TJ
(105:)'
T*[(106:)-600(void __stubprintf \(const char* file, int line, const char* func,)]TJ
T*[(107:)-600(                   const char* format, ...\) {)]TJ
T*[(108:)-600(   va_list args;)]TJ
T*[(109:)-600(   fflush \(NULL\);)]TJ
T*[(110:)-600(   printf \("%s: %s[%d] %s: ", execname, file, line, func\);)]TJ
T*[(111:)-600(   va_start \(args, format\);)]TJ
T*[(112:)-600(   vprintf \(format, args\);)]TJ
T*[(113:)-600(   va_end \(args\);)]TJ
T*[(114:)-600(   fflush \(NULL\);)]TJ
T*[(115:)-600(}     )]TJ
(116:)'
ET
Q
Q
endstream
endobj
50 0 obj
2646
endobj
54 0 obj
<</Length 55 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(4)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 280.535 736.5 Tm
(auxlib.cc)Tj
-120.332 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-103.003 -36.5 Td
(117:)Tj
12 TL
T*[(118:)-600(void set_debugflags \(const char* flags\) {)]TJ
T*[(119:)-600(   debugflags = flags;)]TJ
T*[(120:)-600(   if \(strchr \(debugflags, '@'\) != NULL\) alldebugflags = true;)]TJ
T*[(121:)-600(   DEBUGF \('x', "Debugflags = \\"%s\\", all = %d\\n",)]TJ
T*[(122:)-600(           debugflags, alldebugflags\);)]TJ
T*[(123:)-600(})]TJ
(124:)'
T*[(125:)-600(bool is_debugflag \(char flag\) {)]TJ
T*[(126:)-600(   return alldebugflags or strchr \(debugflags, flag\) != NULL;)]TJ
T*[(127:)-600(})]TJ
(128:)'
T*[(129:)-600(void __debugprintf \(char flag, const char* file, int line,)]TJ
T*[(130:)-600(                    const char* func, const char* format, ...\) {)]TJ
T*[(131:)-600(   va_list args;)]TJ
T*[(132:)-600(   if \(not is_debugflag \(flag\)\) return;)]TJ
T*[(133:)-600(   fflush \(NULL\);)]TJ
T*[(134:)-600(   va_start \(args, format\);)]TJ
T*[(135:)-600(   fprintf \(stderr, "DEBUGF\(%c\): %s[%d] %s\(\):\\n",)]TJ
T*[(136:)-600(             flag, file, line, func\);)]TJ
T*[(137:)-600(   vfprintf \(stderr, format, args\);)]TJ
T*[(138:)-600(   va_end \(args\);)]TJ
T*[(139:)-600(   fflush \(NULL\);)]TJ
T*[(140:)-600(})]TJ
ET
Q
Q
endstream
endobj
55 0 obj
1683
endobj
59 0 obj
<</Length 60 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 274.312 736.5 Tm
(stringset.cc)Tj
-114.11 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(//)]TJ
(3:)'
T*[(4:)-600(#include "stringset.h")]TJ
(5:)'
T*[(6:)-600(using stringset = unordered_set<string>;)]TJ
(7:)'
T*[(8:)-600(stringset set;)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(const string* intern_stringset \(const char* string\) {)]TJ
T*[(11:)-600(   pair<stringset::const_iterator,bool> handle = set.insert \(string\);)]TJ
T*[(12:)-600(   return &*handle.first;)]TJ
T*[(13:)-600(})]TJ
(14:)'
T*[(15:)-600(void dump_stringset \(FILE* out\) {)]TJ
T*[(16:)-600(   size_t max_bucket_size = 0;)]TJ
T*[(17:)-600(   for \(size_t bucket = 0; bucket < set.bucket_count\(\); ++bucket\) {)]TJ
T*[(18:)-600(      bool need_index = true;)]TJ
T*[(19:)-600(      size_t curr_size = set.bucket_size \(bucket\);)]TJ
T*[(20:)-600(      if \(max_bucket_size < curr_size\) max_bucket_size = curr_size;)]TJ
T*[(21:)-600(      for \(stringset::const_local_iterator itor = set.cbegin \(bucket\);)]TJ
T*[(22:)-600(           itor != set.cend \(bucket\); ++itor\) {)]TJ
T*[(23:)-600(         if \(need_index\) fprintf \(out, "stringset[%4lu]: ", bucket\);)]TJ
T*[(24:)-600(                    else fprintf \(out, "          %4s   ", ""\);)]TJ
T*[(25:)-600(         need_index = false;)]TJ
T*[(26:)-600(         const string* str = &*itor;)]TJ
T*[(27:)-600(         fprintf \(out, "%22lu %p->\\"%s\\"\\n",)]TJ
T*[(28:)-600(                  set.hash_function\(\)\(*str\),)]TJ
T*[(29:)-600(                  str, str->c_str\(\)\);)]TJ
T*[(30:)-600(      })]TJ
T*[(31:)-600(   })]TJ
T*[(32:)-600(   fprintf \(out, "load_factor = %.3f\\n", set.load_factor\(\)\);)]TJ
T*[(33:)-600(   fprintf \(out, "bucket_count = %lu\\n", set.bucket_count\(\)\);)]TJ
T*[(34:)-600(   fprintf \(out, "max_bucket_size = %lu\\n", max_bucket_size\);)]TJ
T*[(35:)-600(})]TJ
(36:)'
ET
Q
Q
endstream
endobj
60 0 obj
2347
endobj
64 0 obj
<</Length 65 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/30/14)Tj
-0.659766 -12.8 Td
(10:30:19)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 261.482 736.5 Tm
(symbol-table.cc)Tj
-101.279 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(#include "symbol-table.h")]TJ
12 TL
T*[(2:)-600(#include "astree.h")]TJ
T*[(3:)-600(#include "lyutils.h")]TJ
(4:)'
T*[(5:)-600(vector<symbol_table*> symbol_stack;)]TJ
T*[(6:)-600(symbol_table* struct_table;)]TJ
T*[(7:)-600(int next_block = 1;)]TJ
T*[(8:)-600(vector<int> blocknr_stack;)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(symbol* new_symbol\(astree* node\) {)]TJ
T*[(11:)-600(    symbol* sym = new symbol\(\);)]TJ
T*[(12:)-600(    sym->attributes = node->attributes;)]TJ
T*[(13:)-600(    sym->filenr     = node->filenr;)]TJ
T*[(14:)-600(    sym->linenr     = node->linenr;)]TJ
T*[(15:)-600(    sym->offset     = node->offset;)]TJ
T*[(16:)-600(    sym->blocknr    = node->blocknr;)]TJ
T*[(17:)-600(    sym->parameters = nullptr;)]TJ
T*[(18:)-600(    sym->fields     = nullptr;)]TJ
T*[(19:)-600(    return sym;)]TJ
T*[(20:)-600(})]TJ
(21:)'
T*[(22:)-600(/* Inserts entry into specified symbol table */)]TJ
T*[(23:)-600(bool add_symbol \(symbol_table *table, symbol_entry entry\) {)]TJ
T*[(24:)-600(    if \(table == nullptr\) {)]TJ
T*[(25:)-600(        table = new symbol_table\(\);)]TJ
T*[(26:)-600(    })]TJ
T*[(27:)-600(    return table->insert\(entry\).second;)]TJ
T*[(28:)-600(})]TJ
(29:)'
T*[(30:)-600(/* Enter new nested block */)]TJ
T*[(31:)-600(void enter_block\(astree* block_node\) {)]TJ
T*[(32:)-600(    block_node->blocknr = blocknr_stack.back\(\);)]TJ
T*[(33:)-600(    symbol_stack.push_back\(nullptr\);)]TJ
T*[(34:)-600(    blocknr_stack.pushback\(next_block\);)]TJ
T*[(35:)-600(    next_block++;)]TJ
T*[(36:)-600(})]TJ
(37:)'
T*[(38:)-600(/* Exit current nested block */ )]TJ
T*[(39:)-600(void exit_block\(\) {)]TJ
T*[(40:)-600(    /* Print out stuff */)]TJ
T*[(41:)-600(    symbol_stack.pop_back\(\);)]TJ
T*[(42:)-600(    blocknr_stack.pop_back\(\);)]TJ
T*[(43:)-600(})]TJ
(44:)'
T*[(45:)-600(/*  Traverse astree and build symbol tables */ )]TJ
T*[(46:)-600(void traverse_astree\(astree* root\) {)]TJ
T*[(47:)-600(    switch \(root->symbol\) {)]TJ
T*[(48:)-600(        case TOK_STRUCT:)]TJ
T*[(49:)-600(            create_struct_sym\(root\);)]TJ
T*[(50:)-600(            break;)]TJ
T*[(51:)-600(        case TOK_BLOCK:)]TJ
T*[(52:)-600(            enter_block\(root\);)]TJ
T*[(53:)-600(            break;)]TJ
T*[(54:)-600(        case TOK_VARDECL:)]TJ
T*[(55:)-600(            create_var_sym\(root\);)]TJ
T*[(56:)-600(            break;)]TJ
T*[(57:)-600(        case TOK_PROTOTYPE:)]TJ
T*[(58:)-600(            break;)]TJ
ET
Q
Q
endstream
endobj
65 0 obj
2981
endobj
69 0 obj
<</Length 70 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/30/14)Tj
-0.659766 -12.8 Td
(10:30:19)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 261.482 736.5 Tm
(symbol-table.cc)Tj
-101.279 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
[(59:)-600(        case TOK_FUNCTION:)]TJ
12 TL
T*[(60:)-600(            break;)]TJ
T*[(61:)-600(    })]TJ
T*[(62:)-600(    for \(size_t child = 0; child < root->children.size\(\); ++child\) {)]TJ
T*[(63:)-600(        traverse_astree\(root->children[child]\);)]TJ
T*[(64:)-600(    })]TJ
T*[(65:)-600(    visit\(root\);)]TJ
T*[(66:)-600(})]TJ
(67:)'
T*[(68:)-600(void set_type_attr\(astree* node\) {)]TJ
T*[(69:)-600(    switch \(node->children.at\(0\)->symbol\) {)]TJ
T*[(70:)-600(        case TOK_BOOL:)]TJ
T*[(71:)-600(            node->attributes.set\(ATTR_bool\);)]TJ
T*[(72:)-600(            break;)]TJ
T*[(73:)-600(        case TOK_CHAR:)]TJ
T*[(74:)-600(            node->attributes.set\(ATTR_char\);)]TJ
T*[(75:)-600(            break;)]TJ
T*[(76:)-600(        case TOK_INT:)]TJ
T*[(77:)-600(            node->attributes.set\(ATTR_int\);)]TJ
T*[(78:)-600(            break;)]TJ
T*[(79:)-600(        case TOK_STRING:)]TJ
T*[(80:)-600(            node->attributes.set\(ATTR_string\);)]TJ
T*[(81:)-600(            break;)]TJ
T*[(82:)-600(        case TOK_TYPEID:)]TJ
T*[(83:)-600(            node->attributes.set\(ATTR_typeid\);)]TJ
T*[(84:)-600(            break;)]TJ
T*[(85:)-600(    })]TJ
T*[(86:)-600(})]TJ
(87:)'
T*[(88:)-600(symbol* create_struct_sym\(astree* struct_node\) {)]TJ
T*[(89:)-600(    symbol *sym;)]TJ
T*[(90:)-600(    symbol_entry entry;)]TJ
T*[(91:)-600(    struct_node->attributes.set\(ATTR_struct\);)]TJ
T*[(92:)-600(    struct_node->blocknr = 0;)]TJ
T*[(93:)-600(    sym = new_symbol\(struct_node\);)]TJ
T*[(94:)-600(    for \(size_t child = 1; )]TJ
T*[(95:)-600(                child < struct_node->children.size\(\);)]TJ
T*[(96:)-600(                child++\) {)]TJ
T*[(97:)-600(        astree* field = struct_node->children.at\(child\);)]TJ
T*[(98:)-600(        add_symbol\(sym->fields, create_field_entry\(field\)\);)]TJ
T*[(99:)-600(    })]TJ
-6.6 -12 Td
[(100:)-600(    entry = make_pair\(struct_node->children.at\(0\)->lexinfo, sym\);)]TJ
T*[(101:)-600(    add_symbol\(struct_table, entry\);)]TJ
T*[(102:)-600(    return sym;)]TJ
T*[(103:)-600(})]TJ
(104:)'
T*[(105:)-600(symbol_entry create_field_entry\(astree* field_node\) {)]TJ
T*[(106:)-600(    symbol *sym;)]TJ
T*[(107:)-600(    symbol_entry entry;)]TJ
T*[(108:)-600(    field_node->attributes.set\(ATTR_field\);)]TJ
T*[(109:)-600(    field_node->blocknr = 0;)]TJ
T*[(110:)-600(    set_type_attr\(field_node\);)]TJ
T*[(111:)-600(    if \(field_node->children.at\(1\)->symbol == TOK_ARRAY\) {)]TJ
T*[(112:)-600(        field_node->attributes.set\(ATTR_array\);)]TJ
T*[(113:)-600(        sym   = new_symbol\(field_node\);)]TJ
T*[(114:)-600(        entry = make_pair\(field_node->children.at\(2\)->lexinfo, sym\);)]TJ
T*[(115:)-600(    } else {)]TJ
T*[(116:)-600(        sym   = new_symbol\(field_node\);)]TJ
ET
Q
Q
endstream
endobj
70 0 obj
3334
endobj
74 0 obj
<</Length 75 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/30/14)Tj
-0.659766 -12.8 Td
(10:30:19)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 261.482 736.5 Tm
(symbol-table.cc)Tj
-101.279 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-103.003 -36.5 Td
[(117:)-600(        entry = make_pair\(field_node->children.at\(1\)->lexinfo, sym\);)]TJ
12 TL
T*[(118:)-600(    })]TJ
T*[(119:)-600(    return entry;)]TJ
T*[(120:)-600(})]TJ
(121:)'
(122:)'
T*[(123:)-600(symbol* create_var_sym\(astree* vardecl_node\) {)]TJ
T*[(124:)-600(    symbol* sym;)]TJ
T*[(125:)-600(    symbol_entry entry;)]TJ
T*[(126:)-600(    vardecl_node->blocknr = blocknr_stack.back\(\);)]TJ
T*[(127:)-600(    astree* var_node = vardecl_node->children.at\(0\);)]TJ
T*[(128:)-600(    var_node->attributes.set\(ATTR_variable\);)]TJ
T*[(129:)-600(    var_node->attributes.set\(ATTR_lval\);)]TJ
T*[(130:)-600(    set_type_attr\(var_node\);)]TJ
T*[(131:)-600(    sym = new_symbol\(var_node\);)]TJ
T*[(132:)-600(})]TJ
T*[(133:)-600(/* Visit a node. Basically a large switch statement that assigns)]TJ
T*[(134:)-600( * attributes to the astree nodes, and builds symbol tables as)]TJ
T*[(135:)-600( * declarations are encountered. */)]TJ
T*[(136:)-600(void visit\(astree *root\) {)]TJ
T*[(137:)-600(    return;)]TJ
T*[(138:)-600(})]TJ
ET
Q
Q
endstream
endobj
75 0 obj
1577
endobj
79 0 obj
<</Length 80 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:11:49)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 284.035 736.5 Tm
(main.cc)Tj
-123.832 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(// )]TJ
T*[(3:)-600(// NAME)]TJ
T*[(4:)-600(//    oc - main program for the oc compiler)]TJ
T*[(5:)-600(//)]TJ
T*[(6:)-600(// SYNOPSIS)]TJ
T*[(7:)-600(//    oc [-ly] [-@ <flags...>] [-D <string>] <program>.oc)]TJ
T*[(8:)-600(//)]TJ
T*[(9:)-600(// DESCRIPTION)]TJ
-6.6 -12 Td
[(10:)-600(//    Part four of the ongoing compiler project. Generates)]TJ
T*[(11:)-600(//    <prog>.ast, <prog>.tok, <prog>.str, and <prog>.sym.)]TJ
T*[(12:)-600(//    The first file is a visualization of the AST.)]TJ
T*[(13:)-600(//    The second file shows the contents of each token.)]TJ
T*[(14:)-600(//    The third file shows the contents of the maintained)]TJ
T*[(15:)-600(//    dictionary of encountered tokens.)]TJ
T*[(16:)-600(//    The fourth file shows the symbol table.)]TJ
T*[(17:)-600(//)]TJ
(18:)'
T*[(19:)-600(#include <string>)]TJ
T*[(20:)-600(#include <vector>)]TJ
T*[(21:)-600(#include <fstream>)]TJ
T*[(22:)-600(using namespace std;)]TJ
(23:)'
T*[(24:)-600(#include <assert.h>)]TJ
T*[(25:)-600(#include <errno.h>)]TJ
T*[(26:)-600(#include <stdio.h>)]TJ
T*[(27:)-600(#include <stdlib.h>)]TJ
T*[(28:)-600(#include <string.h>)]TJ
T*[(29:)-600(#include <unistd.h>)]TJ
T*[(30:)-600(#include <sys/types.h>)]TJ
T*[(31:)-600(#include <sys/stat.h>)]TJ
(32:)'
T*[(33:)-600(#include "astree.h")]TJ
T*[(34:)-600(#include "auxlib.h")]TJ
T*[(35:)-600(#include "lyutils.h")]TJ
T*[(36:)-600(#include "stringset.h")]TJ
(37:)'
T*[(38:)-600(string cpp_command = "/usr/bin/cpp";)]TJ
T*[(39:)-600(string filename = "";)]TJ
(40:)'
T*[(41:)-600(FILE *astfile;)]TJ
T*[(42:)-600(FILE *tokfile;)]TJ
T*[(43:)-600(FILE *strfile;)]TJ
(44:)'
T*[(45:)-600(// Open a pipe from the C preprocessor.)]TJ
T*[(46:)-600(// Exit failure if can't.)]TJ
T*[(47:)-600(// Assigns opened pipe to FILE* yyin.)]TJ
T*[(48:)-600(void yyin_cpp_popen \(\) {)]TJ
T*[(49:)-600(    yyin = popen \(cpp_command.c_str\(\), "r"\);)]TJ
T*[(50:)-600(    if \(yyin == NULL\) {)]TJ
T*[(51:)-600(        syserrprintf \(cpp_command.c_str\(\)\);)]TJ
T*[(52:)-600(        exit \(get_exitstatus\(\)\);)]TJ
T*[(53:)-600(    })]TJ
T*[(54:)-600(})]TJ
(55:)'
T*[(56:)-600(void yyin_cpp_pclose \(void\) {)]TJ
T*[(57:)-600(    int pclose_rc = pclose \(yyin\);)]TJ
T*[(58:)-600(    eprint_status \(cpp_command.c_str\(\), pclose_rc\);)]TJ
ET
Q
Q
endstream
endobj
80 0 obj
2865
endobj
84 0 obj
<</Length 85 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:11:49)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 284.035 736.5 Tm
(main.cc)Tj
-123.832 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
[(59:)-600(    if \(pclose_rc != 0\) set_exitstatus \(EXIT_FAILURE\);)]TJ
12 TL
T*[(60:)-600(})]TJ
(61:)'
T*[(62:)-600(bool want_echo \(\) {)]TJ
T*[(63:)-600(    return not \(isatty \(fileno \(stdin\)\) and isatty \(fileno \(stdout\)\)\);)]TJ
T*[(64:)-600(})]TJ
(65:)'
T*[(66:)-600(void scan_opts \(int argc, char** argv\) {)]TJ
T*[(67:)-600(    int option;)]TJ
T*[(68:)-600(    opterr = 0;)]TJ
T*[(69:)-600(    yy_flex_debug = 0;)]TJ
T*[(70:)-600(    yydebug = 0;)]TJ
T*[(71:)-600(    for\(;;\) {)]TJ
T*[(72:)-600(        option = getopt \(argc, argv, "@:D:ly"\);)]TJ
T*[(73:)-600(        if \(option == EOF\) break;)]TJ
T*[(74:)-600(        switch \(option\) {)]TJ
T*[(75:)-600(            case '@': set_debugflags \(optarg\);   break;)]TJ
T*[(76:)-600(            case 'D': cpp_command += " -D " + *optarg; )]TJ
T*[(77:)-600(                      break;)]TJ
T*[(78:)-600(            case 'l': yy_flex_debug = 1;         break;)]TJ
T*[(79:)-600(            case 'y': yydebug = 1;               break;)]TJ
T*[(80:)-600(            default:  errprintf \("%:bad option \(%c\)\\n", optopt\); break;)]TJ
T*[(81:)-600(        })]TJ
T*[(82:)-600(    })]TJ
T*[(83:)-600(    if \(optind > argc\) {)]TJ
T*[(84:)-600(        errprintf \("Usage: %s [-@Dly] [filename]\\n", get_execname\(\)\);)]TJ
T*[(85:)-600(        exit \(get_exitstatus\(\)\);)]TJ
T*[(86:)-600(    })]TJ
T*[(87:)-600(    const char *fname = optind == argc ? "-" : argv[optind];)]TJ
(88:)'
T*[(89:)-600(    // Ensure that file ends in .oc)]TJ
T*[(90:)-600(    struct stat buffer;)]TJ
T*[(91:)-600(    if \(stat\(fname, &buffer\) != 0\) {)]TJ
T*[(92:)-600(        syserrprintf\(fname\);)]TJ
T*[(93:)-600(        exit\(get_exitstatus\(\)\);)]TJ
T*[(94:)-600(    } else {)]TJ
T*[(95:)-600(        int length = strlen\(fname\);)]TJ
T*[(96:)-600(        if \(fname[length - 3] != '.' || \\)]TJ
T*[(97:)-600(                fname[length - 2] != 'o' || \\)]TJ
T*[(98:)-600(                fname[length - 1] != 'c'\) {)]TJ
T*[(99:)-600(            fprintf\(stderr, "oc: %s: file must have .oc suffix\\n", fname)]TJ
-20.8 -12 Td
(\);)Tj
14.2 -12 Td
[(100:)-600(            exit\(get_exitstatus\(\)\);)]TJ
T*[(101:)-600(        })]TJ
T*[(102:)-600(    })]TJ
T*[(103:)-600(    // Copy over filename, remove suffix)]TJ
T*[(104:)-600(    filename = string\(basename\(fname\)\);)]TJ
T*[(105:)-600(    filename = filename.substr\(0, filename.length\(\) - 3\);)]TJ
(106:)'
T*[(107:)-600(    // Open cpp pipe)]TJ
T*[(108:)-600(    cpp_command += " "; )]TJ
T*[(109:)-600(    cpp_command += fname;)]TJ
T*[(110:)-600(    yyin_cpp_popen\(\);)]TJ
T*[(111:)-600(    DEBUGF \('m', "filename = %s, yyin = %p, fileno \(yyin\) = %d\\n",)]TJ
T*[(112:)-600(            fname, yyin, fileno \(yyin\)\);)]TJ
T*[(113:)-600(})]TJ
(114:)'
T*[(115:)-600(int main \(int argc, char** argv\) {)]TJ
ET
Q
Q
endstream
endobj
85 0 obj
3347
endobj
89 0 obj
<</Length 90 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:11:49)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 284.035 736.5 Tm
(main.cc)Tj
-123.832 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-103.003 -36.5 Td
[(116:)-600(    set_execname \(argv[0]\);)]TJ
12 TL
T*[(117:)-600(    DEBUGSTMT \('m',)]TJ
T*[(118:)-600(            for \(int argi = 0; argi < argc; ++argi\) {)]TJ
T*[(119:)-600(            eprintf \("%s%c", argv[argi], argi < argc - 1 ? ' ' : '\\n'\);)]TJ
T*[(120:)-600(            })]TJ
T*[(121:)-600(            \);)]TJ
T*[(122:)-600(    // read in options)]TJ
T*[(123:)-600(    scan_opts\(argc, argv\);)]TJ
(124:)'
(125:)'
T*[(126:)-600(    // initialize output files )]TJ
T*[(127:)-600(    string strfilename = filename + ".str";)]TJ
T*[(128:)-600(    strfile = fopen\(strfilename.c_str\(\), "w"\);)]TJ
(129:)'
T*[(130:)-600(    string tokfilename = filename + ".tok";)]TJ
T*[(131:)-600(    tokfile = fopen\(tokfilename.c_str\(\), "w"\);)]TJ
(132:)'
T*[(133:)-600(    string astfilename = filename + ".ast";)]TJ
T*[(134:)-600(    astfile = fopen\(astfilename.c_str\(\), "w"\);)]TJ
(135:)'
T*[(136:)-600(    // parse)]TJ
T*[(137:)-600(    yyparse\(\);)]TJ
T*[(138:)-600(    yyin_cpp_pclose\(\);)]TJ
(139:)'
T*[(140:)-600(    // generate .str file)]TJ
T*[(141:)-600(    dump_stringset\(strfile\);)]TJ
(142:)'
T*[(143:)-600(    // generate .ast file)]TJ
T*[(144:)-600(    dump_astree\(astfile, yyparse_astree\);)]TJ
T*[(145:)-600(    free_ast \(yyparse_astree\);)]TJ
(146:)'
T*[(147:)-600(    // close tokfile and strfile)]TJ
T*[(148:)-600(    fclose\(astfile\);)]TJ
T*[(149:)-600(    fclose\(tokfile\);)]TJ
T*[(150:)-600(    fclose\(strfile\);)]TJ
(151:)'
T*[(152:)-600(    yylex_destroy\(\);)]TJ
T*[(153:)-600(    return get_exitstatus\(\);)]TJ
T*[(154:)-600(})]TJ
ET
Q
Q
endstream
endobj
90 0 obj
2099
endobj
94 0 obj
<</Length 95 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/29/14)Tj
-0.659766 -12.8 Td
(15:24:27)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 284.427 736.5 Tm
(astree.h)Tj
-124.224 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(//)]TJ
(3:)'
T*[(4:)-600(#ifndef __ASTREE_H__)]TJ
T*[(5:)-600(#define __ASTREE_H__)]TJ
(6:)'
T*[(7:)-600(#include <string>)]TJ
T*[(8:)-600(#include <vector>)]TJ
T*[(9:)-600(using namespace std;)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(#include "auxlib.h")]TJ
T*[(12:)-600(#include "symbol-table.h")]TJ
(13:)'
T*[(14:)-600(struct astree {)]TJ
T*[(15:)-600(   int symbol;               // token code)]TJ
T*[(16:)-600(   size_t filenr;            // index into filename stack)]TJ
T*[(17:)-600(   size_t linenr;            // line number from source code)]TJ
T*[(18:)-600(   size_t offset;            // offset of token with current line)]TJ
T*[(19:)-600(   size_t blocknr;          )]TJ
T*[(20:)-600(   attr_bitset attributes;)]TJ
T*[(21:)-600(   symbol_table *struct_node; )]TJ
T*[(22:)-600(   const string* lexinfo;    // pointer to lexical information)]TJ
T*[(23:)-600(   vector<astree*> children; // children of this n-way node)]TJ
T*[(24:)-600(};)]TJ
(25:)'
(26:)'
T*[(27:)-600(astree* new_astree \(int symbol, int filenr, int linenr,)]TJ
T*[(28:)-600(                    int offset, const char* lexinfo\);)]TJ
T*[(29:)-600(astree* adopt1 \(astree* root, astree* child\);)]TJ
T*[(30:)-600(astree* adopt2 \(astree* root, astree* left, astree* right\);)]TJ
T*[(31:)-600(astree* adopt3 \(astree* root, astree* one, astree* two, astree* three\);)]TJ
T*[(32:)-600(astree* adopt1sym \(astree* root, astree* child, int symbol\);)]TJ
T*[(33:)-600(astree* adopt2sym \(astree* root, )]TJ
T*[(34:)-600(        astree* left, astree* right, int symbol\);)]TJ
T*[(35:)-600(astree* adopt3sym \(astree* root, astree* one, astree* two,)]TJ
T*[(36:)-600(                   astree* three, int symbol\);)]TJ
T*[(37:)-600(void dump_astree \(FILE* outfile, astree* root\);)]TJ
T*[(38:)-600(void yyprint \(FILE* outfile, unsigned short toknum,)]TJ
T*[(39:)-600(              astree* yyvaluep\);)]TJ
T*[(40:)-600(void free_ast \(astree* tree\);)]TJ
T*[(41:)-600(void free_ast \(astree* tree1, astree* tree2\);)]TJ
T*[(42:)-600(void free_ast \(astree* tree1, astree* tree2,)]TJ
T*[(43:)-600(                astree* tree3\);)]TJ
(44:)'
T*[(45:)-600(#endif)]TJ
ET
Q
Q
endstream
endobj
95 0 obj
2739
endobj
99 0 obj
<</Length 100 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 283.244 736.5 Tm
(lyutils.h)Tj
-123.041 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(//)]TJ
(3:)'
T*[(4:)-600(#ifndef __LYUTILS_H__)]TJ
T*[(5:)-600(#define __LYUTILS_H__)]TJ
(6:)'
T*[(7:)-600(// Lex and Yacc interface utility.)]TJ
(8:)'
T*[(9:)-600(#include <stdio.h>)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(#include "astree.h")]TJ
T*[(12:)-600(#include "auxlib.h")]TJ
(13:)'
T*[(14:)-600(#define YYEOF 0)]TJ
(15:)'
T*[(16:)-600(extern FILE* yyin;)]TJ
T*[(17:)-600(extern astree* yyparse_astree;)]TJ
T*[(18:)-600(extern int yyin_linenr;)]TJ
T*[(19:)-600(extern char* yytext;)]TJ
T*[(20:)-600(extern int yy_flex_debug;)]TJ
T*[(21:)-600(extern int yydebug;)]TJ
T*[(22:)-600(extern int yyleng;)]TJ
T*[(23:)-600(extern FILE *tokfile;)]TJ
(24:)'
T*[(25:)-600(int yylex \(void\);)]TJ
T*[(26:)-600(int yyparse \(void\);)]TJ
T*[(27:)-600(void yyerror \(const char* message\);)]TJ
T*[(28:)-600(int yylex_destroy \(void\);)]TJ
T*[(29:)-600(const char* get_yytname \(int symbol\);)]TJ
T*[(30:)-600(bool is_defined_token \(int symbol\);)]TJ
T*[(31:)-600(void error_destructor \(astree* tree\);)]TJ
(32:)'
T*[(33:)-600(const string* scanner_filename \(int filenr\);)]TJ
T*[(34:)-600(void scanner_newfilename \(const char* filename\);)]TJ
T*[(35:)-600(void scanner_badchar \(unsigned char bad\);)]TJ
T*[(36:)-600(void scanner_badtoken \(char* lexeme\);)]TJ
T*[(37:)-600(void scanner_newline \(void\);)]TJ
T*[(38:)-600(void scanner_setecho \(bool echoflag\);)]TJ
T*[(39:)-600(void scanner_useraction \(void\);)]TJ
(40:)'
T*[(41:)-600(astree* new_parseroot \(void\);)]TJ
T*[(42:)-600(int yylval_token \(int symbol\);)]TJ
(43:)'
T*[(44:)-600(void scanner_include \(void\);)]TJ
(45:)'
T*[(46:)-600(typedef astree* astree_pointer;)]TJ
T*[(47:)-600(#define YYSTYPE astree_pointer)]TJ
T*[(48:)-600(#include "yyparse.h")]TJ
(49:)'
T*[(50:)-600(#endif)]TJ
ET
Q
Q
endstream
endobj
100 0 obj
2353
endobj
104 0 obj
<</Length 105 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 283.25 736.5 Tm
(auxlib.h)Tj
-123.048 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(//)]TJ
T*[(3:)-600(// DESCRIPTION)]TJ
T*[(4:)-600(//    Auxiliary library containing miscellaneous useful things.)]TJ
T*[(5:)-600(//)]TJ
(6:)'
T*[(7:)-600(#ifndef __AUXLIB_H__)]TJ
T*[(8:)-600(#define __AUXLIB_H__)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(#include <stdarg.h>)]TJ
(11:)'
T*[(12:)-600(//)]TJ
T*[(13:)-600(// Error message and exit status utility.)]TJ
T*[(14:)-600(//)]TJ
(15:)'
T*[(16:)-600(void set_execname \(char* argv0\);)]TJ
T*[(17:)-600(   //)]TJ
T*[(18:)-600(   // Sets the program name for use by auxlib messages.)]TJ
T*[(19:)-600(   // Must called from main before anything else is done,)]TJ
T*[(20:)-600(   // passing in argv[0].)]TJ
T*[(21:)-600(   //)]TJ
(22:)'
T*[(23:)-600(const char* get_execname \(void\);)]TJ
T*[(24:)-600(   //)]TJ
T*[(25:)-600(   // Returns a read-only value previously stored by set_progname.)]TJ
T*[(26:)-600(   //)]TJ
(27:)'
T*[(28:)-600(void set_localname \(char* filename\);)]TJ
T*[(29:)-600(   //)]TJ
T*[(30:)-600(   // Similar to set_execname, used for general purpose basename)]TJ
T*[(31:)-600(   // retrieval)]TJ
T*[(32:)-600(   //)]TJ
(33:)'
T*[(34:)-600(const char* get_localname \(void\);)]TJ
T*[(35:)-600(   //)]TJ
T*[(36:)-600(   // Again similar to get_execname)]TJ
T*[(37:)-600(   //)]TJ
(38:)'
T*[(39:)-600(void eprint_status \(const char* command, int status\);)]TJ
T*[(40:)-600(   //)]TJ
T*[(41:)-600(   // Print the status returned by wait\(2\) from a subprocess.)]TJ
T*[(42:)-600(   //)]TJ
(43:)'
T*[(44:)-600(int get_exitstatus \(void\);)]TJ
T*[(45:)-600(   //)]TJ
T*[(46:)-600(   // Returns the exit status.  Default is EXIT_SUCCESS unless)]TJ
T*[(47:)-600(   // set_exitstatus \(int\) is called.  The last statement in main)]TJ
T*[(48:)-600(   // should be:  ``return get_exitstatus\(\);''.)]TJ
T*[(49:)-600(   //)]TJ
(50:)'
T*[(51:)-600(void set_exitstatus \(int\);)]TJ
T*[(52:)-600(   //)]TJ
T*[(53:)-600(   // Sets the exit status.  Remebers only the largest value passed in.)]TJ
T*[(54:)-600(   //)]TJ
(55:)'
ET
Q
Q
endstream
endobj
105 0 obj
2583
endobj
109 0 obj
<</Length 110 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(2)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 283.25 736.5 Tm
(auxlib.h)Tj
-123.048 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
(56:)Tj
12 TL
T*[(57:)-600(void veprintf \(const char* format, va_list args\);)]TJ
T*[(58:)-600(   //)]TJ
T*[(59:)-600(   // Prints a message to stderr using the vector form of )]TJ
T*[(60:)-600(   // argument list.)]TJ
T*[(61:)-600(   //)]TJ
(62:)'
T*[(63:)-600(void eprintf \(const char* format, ...\);)]TJ
T*[(64:)-600(   //)]TJ
T*[(65:)-600(   // Print a message to stderr according to the printf format)]TJ
T*[(66:)-600(   // specified.  Usually called for debug output.)]TJ
T*[(67:)-600(   // Precedes the message by the program name if the format)]TJ
T*[(68:)-600(   // begins with the characters `%:'.)]TJ
T*[(69:)-600(   //)]TJ
(70:)'
T*[(71:)-600(void errprintf \(const char* format, ...\);)]TJ
T*[(72:)-600(   //)]TJ
T*[(73:)-600(   // Print an error message according to the printf format)]TJ
T*[(74:)-600(   // specified, using eprintf.  Sets the exitstatus to EXIT_FAILURE.)]TJ
T*[(75:)-600(   //)]TJ
(76:)'
T*[(77:)-600(void syserrprintf \(const char* object\);)]TJ
T*[(78:)-600(   //)]TJ
T*[(79:)-600(   // Print a message resulting from a bad system call.  The)]TJ
T*[(80:)-600(   // object is the name of the object causing the problem and)]TJ
T*[(81:)-600(   // the reason is taken from the external variable errno.)]TJ
T*[(82:)-600(   // Sets the exit status to EXIT_FAILURE.)]TJ
T*[(83:)-600(   //)]TJ
(84:)'
ET
Q
Q
endstream
endobj
110 0 obj
1859
endobj
114 0 obj
<</Length 115 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(3)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 283.25 736.5 Tm
(auxlib.h)Tj
-123.048 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-96.4027 -36.5 Td
(85:)Tj
12 TL
T*[(86:)-600(//)]TJ
T*[(87:)-600(// Support for stub messages.)]TJ
T*[(88:)-600(//)]TJ
T*[(89:)-600(#define STUBPRINTF\(...\) \\)]TJ
T*[(90:)-600(        __stubprintf \(__FILE__, __LINE__, __func__, __VA_ARGS__\))]TJ
T*[(91:)-600(void __stubprintf \(const char* file, int line, const char* func,)]TJ
T*[(92:)-600(                   const char* format, ...\);)]TJ
(93:)'
T*[(94:)-600(//)]TJ
T*[(95:)-600(// Debugging utility.)]TJ
T*[(96:)-600(//)]TJ
(97:)'
T*[(98:)-600(void set_debugflags \(const char* flags\);)]TJ
T*[(99:)-600(   //)]TJ
-6.6 -12 Td
[(100:)-600(   // Sets a string of debug flags to be used by DEBUGF statements.)]TJ
T*[(101:)-600(   // Uses the address of the string, and does not copy it, so it)]TJ
T*[(102:)-600(   // must not be dangling.  If a particular debug flag has been set,)]TJ
T*[(103:)-600(   // messages are printed.  The format is identical to printf format.)]TJ
T*[(104:)-600(   // The flag "@" turns on all flags.)]TJ
T*[(105:)-600(   //)]TJ
(106:)'
T*[(107:)-600(bool is_debugflag \(char flag\);)]TJ
T*[(108:)-600(   //)]TJ
T*[(109:)-600(   // Checks to see if a debugflag is set.)]TJ
T*[(110:)-600(   //)]TJ
(111:)'
T*[(112:)-600(#ifdef NDEBUG)]TJ
T*[(113:)-600(// Do not generate any code.)]TJ
T*[(114:)-600(#define DEBUGF\(FLAG,...\)   /**/)]TJ
T*[(115:)-600(#define DEBUGSTMT\(FLAG,STMTS\) /**/)]TJ
T*[(116:)-600(#else)]TJ
T*[(117:)-600(// Generate debugging code.)]TJ
T*[(118:)-600(void __debugprintf \(char flag, const char* file, int line,)]TJ
T*[(119:)-600(                    const char* func, const char* format, ...\);)]TJ
T*[(120:)-600(#define DEBUGF\(FLAG,...\) \\)]TJ
T*[(121:)-600(        __debugprintf \(FLAG, __FILE__, __LINE__, __func__, __VA_ARGS__\))]TJ
T*[(122:)-600(#define DEBUGSTMT\(FLAG,STMTS\) \\)]TJ
T*[(123:)-600(        if \(is_debugflag \(FLAG\)\) { DEBUGF \(FLAG, "\\n"\); STMTS })]TJ
T*[(124:)-600(#endif)]TJ
T*[(125:)-600(#endif)]TJ
ET
Q
Q
endstream
endobj
115 0 obj
2445
endobj
119 0 obj
<</Length 120 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/21/14)Tj
-0.659766 -12.8 Td
(09:10:22)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 277.028 736.5 Tm
(stringset.h)Tj
-116.825 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(//)]TJ
(3:)'
T*[(4:)-600(#ifndef __STRINGSET__)]TJ
T*[(5:)-600(#define __STRINGSET__)]TJ
(6:)'
T*[(7:)-600(#include <string>)]TJ
T*[(8:)-600(#include <unordered_set>)]TJ
T*[(9:)-600(using namespace std;)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(#include <stdio.h>)]TJ
(12:)'
T*[(13:)-600(const string* intern_stringset \(const char*\);)]TJ
(14:)'
T*[(15:)-600(void dump_stringset \(FILE*\);)]TJ
(16:)'
T*[(17:)-600(#endif)]TJ
(18:)'
ET
Q
Q
endstream
endobj
120 0 obj
1038
endobj
124 0 obj
<</Length 125 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(11/29/14)Tj
-0.659766 -12.8 Td
(18:40:34)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 529.994 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R12 14 Tf
1 0 0 1 264.197 736.5 Tm
(symbol-table.h)Tj
-103.995 18 Td
(/afs/cats.ucsc.edu/users/b/ancedwar/compilers/asg4/)Tj
/R14 11 Tf
-89.8027 -36.5 Td
[(1:)-600(// Author, Andrew Edwards, ancedwar@ucsc.edu)]TJ
12 TL
T*[(2:)-600(//)]TJ
(3:)'
T*[(4:)-600(#ifndef __SYMBOLTABLE__)]TJ
T*[(5:)-600(#define __SYMBOLTABLE__)]TJ
(6:)'
T*[(7:)-600(#include <string>)]TJ
T*[(8:)-600(#include <unordered_map>)]TJ
T*[(9:)-600(#include <bitset>)]TJ
-6.6 -12 Td
[(10:)-600(#include <vector>)]TJ
T*[(11:)-600(using namespace std;)]TJ
(12:)'
T*[(13:)-600(enum { ATTR_void, ATTR_bool, ATTR_char, ATTR_int, ATTR_null,)]TJ
T*[(14:)-600(       ATTR_string, ATTR_struct, ATTR_array, ATTR_function,)]TJ
T*[(15:)-600(       ATTR_variable, ATTR_field, ATTR_typeid, ATTR_param,)]TJ
T*[(16:)-600(       ATTR_lval, ATTR_const, ATTR_vreg, ATTR_vaddr,)]TJ
T*[(17:)-600(       ATTR_bitset_size,)]TJ
T*[(18:)-600(};)]TJ
T*[(19:)-600(using attr_bitset = bitset<ATTR_bitset_size>;)]TJ
(20:)'
T*[(21:)-600(struct symbol;)]TJ
T*[(22:)-600(using symbol_table = unordered_map<const string*,symbol*>;)]TJ
T*[(23:)-600(using symbol_entry = pair<const string*,symbol*>;)]TJ
(24:)'
T*[(25:)-600(struct symbol {)]TJ
T*[(26:)-600(   attr_bitset attributes;)]TJ
T*[(27:)-600(   symbol_table *fields;)]TJ
T*[(28:)-600(   size_t filenr, linenr, offset;)]TJ
T*[(29:)-600(   size_t blocknr;)]TJ
T*[(30:)-600(   vector<symbol*>* parameters;)]TJ
T*[(31:)-600(};)]TJ
(32:)'
T*[(33:)-600(struct astree;)]TJ
T*[(34:)-600(symbol* new_symbol\(astree* node\);)]TJ
T*[(35:)-600(bool add_symbol\(symbol_table table, symbol_entry entry\);)]TJ
T*[(36:)-600(void enter_block\(\);)]TJ
T*[(37:)-600(void exit_block\(\);)]TJ
T*[(38:)-600(void traverse_astree\(astree* root\);)]TJ
T*[(39:)-600(symbol* create_struct_sym\(astree* struct_node\);)]TJ
T*[(40:)-600(symbol_entry create_field_entry\(astree* field_node\);)]TJ
T*[(41:)-600(void visit\(astree* root\);)]TJ
T*[(42:)-600(#endif)]TJ
ET
Q
Q
endstream
endobj
125 0 obj
2309
endobj
4 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 16 0 R
/Font 17 0 R
>>
/Contents 5 0 R
>>
endobj
18 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 21 0 R
/Font 22 0 R
>>
/Contents 19 0 R
>>
endobj
23 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 26 0 R
/Font 27 0 R
>>
/Contents 24 0 R
>>
endobj
28 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 31 0 R
/Font 32 0 R
>>
/Contents 29 0 R
>>
endobj
33 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 36 0 R
/Font 37 0 R
>>
/Contents 34 0 R
>>
endobj
38 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 41 0 R
/Font 42 0 R
>>
/Contents 39 0 R
>>
endobj
43 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 46 0 R
/Font 47 0 R
>>
/Contents 44 0 R
>>
endobj
48 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 51 0 R
/Font 52 0 R
>>
/Contents 49 0 R
>>
endobj
53 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 56 0 R
/Font 57 0 R
>>
/Contents 54 0 R
>>
endobj
58 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 61 0 R
/Font 62 0 R
>>
/Contents 59 0 R
>>
endobj
63 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 66 0 R
/Font 67 0 R
>>
/Contents 64 0 R
>>
endobj
68 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 71 0 R
/Font 72 0 R
>>
/Contents 69 0 R
>>
endobj
73 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 76 0 R
/Font 77 0 R
>>
/Contents 74 0 R
>>
endobj
78 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 81 0 R
/Font 82 0 R
>>
/Contents 79 0 R
>>
endobj
83 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 86 0 R
/Font 87 0 R
>>
/Contents 84 0 R
>>
endobj
88 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 91 0 R
/Font 92 0 R
>>
/Contents 89 0 R
>>
endobj
93 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 96 0 R
/Font 97 0 R
>>
/Contents 94 0 R
>>
endobj
98 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 101 0 R
/Font 102 0 R
>>
/Contents 99 0 R
>>
endobj
103 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 106 0 R
/Font 107 0 R
>>
/Contents 104 0 R
>>
endobj
108 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 111 0 R
/Font 112 0 R
>>
/Contents 109 0 R
>>
endobj
113 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 116 0 R
/Font 117 0 R
>>
/Contents 114 0 R
>>
endobj
118 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 121 0 R
/Font 122 0 R
>>
/Contents 119 0 R
>>
endobj
123 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 126 0 R
/Font 127 0 R
>>
/Contents 124 0 R
>>
endobj
3 0 obj
<< /Type /Pages /Kids [
4 0 R
18 0 R
23 0 R
28 0 R
33 0 R
38 0 R
43 0 R
48 0 R
53 0 R
58 0 R
63 0 R
68 0 R
73 0 R
78 0 R
83 0 R
88 0 R
93 0 R
98 0 R
103 0 R
108 0 R
113 0 R
118 0 R
123 0 R
] /Count 23
>>
endobj
1 0 obj
<</Type /Catalog /Pages 3 0 R
/Metadata 133 0 R
>>
endobj
7 0 obj
<</Type/ExtGState
/OPM 1>>endobj
16 0 obj
<</R7
7 0 R>>
endobj
17 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
21 0 obj
<</R7
7 0 R>>
endobj
22 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
26 0 obj
<</R7
7 0 R>>
endobj
27 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
31 0 obj
<</R7
7 0 R>>
endobj
32 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
36 0 obj
<</R7
7 0 R>>
endobj
37 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
41 0 obj
<</R7
7 0 R>>
endobj
42 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
46 0 obj
<</R7
7 0 R>>
endobj
47 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
51 0 obj
<</R7
7 0 R>>
endobj
52 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
56 0 obj
<</R7
7 0 R>>
endobj
57 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
61 0 obj
<</R7
7 0 R>>
endobj
62 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
66 0 obj
<</R7
7 0 R>>
endobj
67 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
71 0 obj
<</R7
7 0 R>>
endobj
72 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
76 0 obj
<</R7
7 0 R>>
endobj
77 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
81 0 obj
<</R7
7 0 R>>
endobj
82 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
86 0 obj
<</R7
7 0 R>>
endobj
87 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
91 0 obj
<</R7
7 0 R>>
endobj
92 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
96 0 obj
<</R7
7 0 R>>
endobj
97 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
101 0 obj
<</R7
7 0 R>>
endobj
102 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
106 0 obj
<</R7
7 0 R>>
endobj
107 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
111 0 obj
<</R7
7 0 R>>
endobj
112 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
116 0 obj
<</R7
7 0 R>>
endobj
117 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
121 0 obj
<</R7
7 0 R>>
endobj
122 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
126 0 obj
<</R7
7 0 R>>
endobj
127 0 obj
<</R12
12 0 R/R14
14 0 R/R10
10 0 R/R8
8 0 R>>
endobj
12 0 obj
<</BaseFont/AAOYWV+Times-Roman/FontDescriptor 13 0 R/Type/Font
/FirstChar 45/LastChar 121/Widths[ 333 250 278
0 0 0 0 500 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 444 500 444 500 444 333 500 500 278 0 0 278 778 500 500
500 0 333 389 278 500 0 722 500 500]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
14 0 obj
<</BaseFont/SQVJBO+Courier-Bold/FontDescriptor 15 0 R/Type/Font
/FirstChar 32/LastChar 125/Widths[
600 600 600 600 0 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 0 600 600 600 600 600
600 0 600 600 600 600 600 600 600 600 0 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 0 600 600 600 600 600 600 600 600 600 600 600 600]
/Encoding 132 0 R/Subtype/Type1>>
endobj
132 0 obj
<</Type/Encoding/BaseEncoding/WinAnsiEncoding/Differences[
39/quoteright
96/quoteleft]>>
endobj
10 0 obj
<</BaseFont/QGTUCD+Helvetica-Bold/FontDescriptor 11 0 R/Type/Font
/FirstChar 49/LastChar 52/Widths[ 556 556 556 556]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
8 0 obj
<</BaseFont/HRTMQV+Times-Bold/FontDescriptor 9 0 R/Type/Font
/FirstChar 47/LastChar 58/Widths[ 278
500 500 500 500 500 500 0 500 500 500 333]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
13 0 obj
<</Type/FontDescriptor/FontName/AAOYWV+Times-Roman/FontBBox[-9 -218 775 683]/Flags 32
/Ascent 683
/CapHeight 683
/Descent -218
/ItalicAngle 0
/StemV 116
/MissingWidth 500
/XHeight 460
/CharSet(/a/b/c/d/e/f/four/g/h/hyphen/i/l/m/n/o/p/period/r/s/slash/t/u/w/x/y)/FontFile3 128 0 R>>
endobj
128 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 3588>>stream
Gar>GGuR^D*e#ghpJhf0dO:6Ha6BsGl\;j=8o:UE[gooulq:Ia+de68KS5"(OG)^B!O=s]#a$u0
=;1ls-rn[+Zu0`_9;h!tFAZ\M4Yu7bcZ@C"(OP;g+*5^hn%AD_]taIAIJ8*Gmpf`ko.UB$&Y'sT
jd3-,Q\]\#JbR]*3.lTi*k@549o5LRT5J6m_dYdQKeSl#K7aZKZJ\n7](m!0/jfCN0d_NM@I8o;
8/3G&K#4gLQ&5%QDld-MqL;l'7n#j8j=:-j'!X%'<)=]t=AD)Fk6iS6;80PV;a`H*>::1*LaWfa
UkPWW3I,oGH%BNu3Pt\]&N^+^JQ+*JO'!:u7`:&&aRs?4gH0`bU0Li8`:M1tp.1o%@O'n($Y7,E
P5cW?0T7BF84uRuAFc7J>fD9,r.>0,!hj;Pg3%=DfNrA9(5M:t'!ObT#tr)u_G[XP/.L?gD9$g-
40`)Da4MK<h:Nc""C$PmLiK\r1jE+6<fW_^Ch%S5HZ,L2)8b_Hg(AFt[@/tk%V"%orrb7?MfBF0
k_0a)I/Ce@q<[q#k,4Ab+_2U8O\="Um`hGBF%eOg._"*j0XX1$B31oAPR5-MXZE9o=.qqs882&2
_GM9^K@;2/>DF=beLg]dT^i,BX\u##-KVd'>*Gfu:>n_E*bLttROM4Um,[%-H?5NATM;BGd6$W@
j9?^$rs.'I!u"hYCbE+TEYZQk_LGmP6;ct,Ij%!ZZL/=t1/T@Vc<XO@/YcF?m+dbJY^=$QON^\\
J2d!gV_6fde$1;u]@*H>,+Y>7q)n<#*0NHe_D0cdAR)jh$LJBH[d#W(B8$=4CUO$J3+oc7)$/n6
&(k?kC4V^kZlY/?FmC@sNop@pK$`iI`U//#F+74^@MWr&(sIiuKiJFO*dVl8GMq9?a`"%7;`M`i
gCg%h5<?Rj5n@Z,54C>ASRYjFV;*teh:)f%*d_H66!41]ea$^%1bO(jfP+3oi%0n!^csj8f5*D2
>52uXMno_iDHFGgW8&oE&XR?-,CT\`F-<VtC0q,R(/NP]nWI\$<LohU?:%LJQ>fm"CZm7W(;7T5
ZKphWoaMA<OCs))ZaL2'[+f,s`o?L^j&;]Hq[_IX-dENfaP0@]OI()\Os1Gu4"L*f4k3h<ZZmc2
l""!=NFk4Y:95JEeT]F1Zl=C@[@ZmB=3f]j/fiY-8l4.TM-JL4qfq.R^6>l*Jdl"-eUtFN1>!]6
6q1qcg_.n\A0[;JSEn?1c?;$H%"*K2Tj"YC:WQ;7XMm3o[<dJ^\.mM^l7MZgkPAi@)>:ZEfb^NG
G0^TeX'3Y=PWB]C*E;];-I<Ufh#E'KTZR"S0DSqd\h3R:*83^IdS?*'F,fN[D9GKP4f1+;cB&ZD
Wb^/$<1MA:-o%aP>,b2o&OAPJd-q1SBh*BHj_AbGY"]'UEN0>XIlc]W,@g/U55sUgCEqcU2V(ZN
7pA/oj+TTYW:lDCHPtm%\eGkreiWM##uu^XX`Q^+')!q-;kAXR3dIs9`Ho[a];R7q3)\M2od3im
X;0!;81Hc=-#0K'e2s=U#7n;tL)]A[]2YH(hPTU46/g=gYZ?l\h$fdGc.UfDZV;P8,Gf6=fP"rQ
4=b6R]>nXRs#nR^@;5;\>C[9*T5HRd4;l]jHL?-eo"-3<'BG`<\Os9LW.K8^^?mn2Oo_(-p8bc9
UY-[b+MMH'>&9U.hUR&,gY(6+e6jTfm0tse`V]S(j&:Bc7/e5mXkg+\aj-6peH/j+F&HJ.B3dWK
m-r4f50')Hj=*;/5"t-(Eg.W>epYku6=Y/KVGo.H/r+\FA9a8N"Rs:5;7,gP*`*D$q3Hqi"rF%.
(L%1,DW,U#AX!i$4UUW@)fY[K4;YCk"U=64#,m7pNN>N]1h[S'Ej[i"18,P>:>"^9%[^q6%]J`%
!4o381EKGtKi)Y98sHC*(Y/%Tk]I]'BUYI9<gV9.gdR-MU`p]dAcjmZTL*!i<$027<e1F@);"&5
r6J'Dk33+UUH(gjXi[O$M/-4YT\7g#XUlS`=6C.@gd$,!kT1(XK'&caTgbFmY1OChO='-<"c]&k
S[gQT!>RpUdpo,85O%HYXu,,unfgd=#u(p[>fHEKX".s)%!?mU9rafeW7fNul\$iPk]'`Qc#bPJ
C=$2>Y-f\jRq`58e@7o\<-J@BnXum5<[go_b:;#g!3=AUV@'B0;+[CX>[CUp0:B=rqAahK%"Zum
X.B5*8%40gi5&J?X.Rd\Rn:>O,.Zsm$VKG&*Z9#0JR?a[r,1#`4m4#WAN#B8E>\7m4$1%!D*R]2
>)Ks8QUoAam"FifeDe)U&bErNHZ55,f1d@3L$+iJ5W:^\a67l#jE"#e<ui*ZQsmOVU7iXZ6+ikF
rnGLEZmMV"$["0r?6uhDR\:2M8*mflJr0^,IVHt+Lf7\5`M-\8?G?(jRWn1upXCl/!tZ[_lLc'd
<Zs-DM'9Sfi>u0U=B"+)qq4q<&eQPX3YM<%(hJf0d7/$Mk%o#GN/-*bi`X5trD<G]**m+,I%fjZ
nV]jm%k#7oR%_S;AE6@l_'ki5J+X9QO)A5gfE@hXK3!%tmL12J#VX&4M=YT^2g&Hc7l`cQYB4WJ
!_9_Ueu80\K1?H]l,4XW]=:km%e6\3:Y08\n(ukld`c0p33/pL@1s])k`=4n2Z-+HM%9/9V[Gmq
Zn:b_Nio)fn=1,tkUeGkdY!FsRX>P$%9.Vbcc7;ha>!&7LHl>L(:dFW$^3WI9uRZN]/;W)[P.[(
,,.Dt:`>9]i[QsQ_t$jQ1&87gBb<I`-f)mjFR)]j`!l\0@(RL%KpOPA[TY(sF'+U9`"(VM4#GAu
ZStu*/?ko+g!C.g^i@t6hiQ/A!iKJAYtOK).K-TLg`cVZ_\C%=*3(KEgRLd=hMUV`hIUh)9G:.a
BC5r\aN;8)V9$pU'XhVj4FFoR0QV0X(Q\C,3J-`VN3DEk*ZDBXkV7;@j?WSZ`2@qh[M)UYJ3.mR
EJE@%6))8)K@b+-%fVl;k.Q1'V0b#oBGMF:!_l82r^rb=nD?*l/@=KsPI?orin5IT[i;@-C?Y=W
(PlkX[F4C*N^E3G^bt+?$_N+/H1H;cmf/-<"5[Ek!_Ys\Y1;kqfcdQrH"U+X(p29T#b6dt"[6h(
EPSbsKE-d$602?c=d_\+=m#&=lKn81Fbtt<d2@G'@s0tGEgt`6VH+AT?b\s&4+guB'@g*f7QQdb
"_&E.%X8a:++d[;Z8,dr6V04k%Q_"/1Q2Q[-oQ$!4(suA[+GF4WRkIE:/K2d(omNDFGphK82@5L
i#%JD!&WFM<bkL_AGZYNO*;Afk_T;pYLUVt1,!^"Ga#-J?G]PQ(ml<6S:p[=8%OhU$>A$k;\Q(,
-V7R9fISdZH/KMMjT78'n+.(M;MsKIq2/<@?R!^G'(s7Hr"a.R;CZ@4V;fmu7nK$bA#Or=L)euN
e8Q:Y+H+go5VN(g.k2t`ML.tl#CCgo#E*pt!Gp9BVgNf4r96]=/iKR$pC>b3p2aA,/$@7U-5<#\
oAT'_S=`@rWoUlh`auESX3]d-0kcs."?=0O7[p!RWEiT8Pb*m,kV4SUmNn(0.)F(JR"'V%J1WbU
^*e.KLA_A2+I!o~>
endstream
endobj
15 0 obj
<</Type/FontDescriptor/FontName/SQVJBO+Courier-Bold/FontBBox[-21 -205 623 695]/Flags 35
/Ascent 695
/CapHeight 597
/Descent -205
/ItalicAngle 0
/StemV 150
/AvgWidth 600
/MaxWidth 600
/MissingWidth 600
/XHeight 451
/CharSet(/A/B/C/D/E/F/G/H/I/K/L/M/N/O/P/R/S/T/U/V/W/X/Y/a/ampersand/asciicircum/asterisk/at/b/backslash/bar/braceleft/braceright/bracketleft/bracketright/c/colon/comma/d/e/eight/equal/exclam/f/five/four/g/greater/h/hyphen/i/j/k/l/less/m/n/nine/numbersign/o/one/p/parenleft/parenright/percent/period/plus/question/quotedbl/quoteleft/quoteright/r/s/semicolon/seven/six/slash/space/t/three/two/u/underscore/v/w/x/y/z/zero)/FontFile3 129 0 R>>
endobj
129 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 9883>>stream
Gatm^$!:-Xf(KE3P>emC)NQ2u-D5LQ[J$W.Fk3QP.gh(G,(qDh&/'^k5hH3j,_V7EQpO&':n1?Z
lWAr!>&.>XD/[18>MIoh`n%Tqpi$"Ws%Ylt"T.$<J,Vr,brL,SCVB1_f@jXF?606-`HlNl-n/I>
)F&)<-u-NWK,MmH(A"O2o9s;IgABCkl!!drKO=QE(\<Ed^^s9q`2i1R)4n_`ouljR@8QM-iQ5Q*
jr'JA@`@lSYjb&QM;'q,T/:-%e=KHJc(@5XB:miT`+O@/JhSaqB0?/`EbL[c2EEZAnL^AEq!G".
@>I]]PW1Q`_.W69rLs*/_u06uKgtp?'LiC=@n"L'':2GaR6>WRXD.IMh"APJI7X`/lU3HO+$Ujf
&c-lA&4F<sQlSgg!R"r=YD?PRYU]2!Ut*R9He5._o+Qn\9A@3FFMiZh@H!]0>9^LFDN"(HhB"Lb
kLAF(];G%gZ"KqEQ?7<HS2]TEl16jkH"5ut?1?FTL#_'^nBSs@P86q@LbZgP@QlN4fLRP9?7.WC
j,!6D(1I?MQ'b*Y,:4$%`+3==Z%H.N9I0arA]-DLOB>7O-\@-h`!g*$0p>^.bTbmi<YKP128gHP
>%0,C8%_Ep,Q:06-fu!KM'9gl`/DPq`)'nT0oT4.]L4:o?7'h._hhcQ9C*il&2Z,)G_KN;hLl-M
,<Uf[KGQA3Ga0D.f*Dl&-R_;H]Kl6'K*Ygn0G0+hNaFckg?8";a$idak6\=DCeqKmgd"'cS>J\-
b^&1@TW<_D#%&Gb398g11P^\n)`@![95@m\o!3*,lJX)XC@7--<fGDSCZqrl`k=/-PpbGY]Jk(X
UY[!`a(Xl(s*5?l[ck-RHlmf#s&2)qX;'_$3WrdqIe"B<o8\mNQgK.8f/@6jR*;hjZ)M6$fAg46
HN!X)s#huO>jM1,';eIU5G;QGXGN@/k"[rul/Tn"P@GupVn>1Sr`"C0VkM=1^ja64(L*?p/ERC$
S$(Vd:*ekM1/G'9b2m=[%7mkS;RoP:aK5IW'TeTQ<22#re*5)l$quPa%%U'Bf8'D6@T'j9'H-3T
/!EW;`ldpG^"Ngl)^Lm"ac-OGr0ZZ9Ru4.:43<8jrfcVY`<o<jTG#B3.r6&1VpR'd52=;(CtJg(
Z:A#Os2tlsmB:J)_<oH]H5`a_C659Pa\<G$=:eW#Fu57H1)2/X.+IhSY+nOq&qaHHFVHM'Wd:6#
R8m7+%EZ;-mW>57IIqYd@\<_'jQoYT8)ip-')])^DQ1XOo)3sGL'+TU*Y2t@W7b7`$Z#u5Bi$MF
gapod@5.oOT]%H3rc!<d3B4qZ-=p>kHa-^a&s20(PSnLq"@thA5/W[M*O38T6<:cs<sksP4aRhC
C*on_Gp(Radca;CWuB8Qlb(UH'Z`J"PT&X?\j306*Rh?uE>qfuKplB,&F[YQ8@U]L%&/#"-Tq"W
U#bdkI-1h&E/Yh6g5#]9LDfg1f]'[E@&Ki3K%#iFL+S[+Q,_To]]'eA%_@/]`uDnhAM!s9F0`?N
WI<:2k'_p8HrSTQ/mU)NO-Agm-0eZ!Q'$7N91*(-j4lVW&/#s"[7l,'.%>s$i+UDUd&=%2;V^02
&p%<pW%aoi'd)m>@YY\Aeo<daD>/^M(k3Gu7-sHb)i]O3ld50[r"Y6F1a8P7?U<NOqO?4YQRlIR
C%gnY=$HTLp>t`Gc6G(f()AI:;u@!Q1n4g4C^kYLa&WWZ\QgF6Q9/>/K8f8IlGQRlSST3j't`a2
CPe_n<'+BNM-]4jI5VSX*`l4$e`((d3$68qB\XM$li7kQFa>SJH_RU7pu&Jt^s6:SipEVtR2L1A
AU"m^`CskOF,f>=[VcQ+DBFk8UHrQAH:+p*K;QMPO=,G=it'<P:\'uj.]f;3W_9FRc,e,Sb2UI!
!6A'W91'E*!/60?F3?2Ganb=fHbVDHaJF%WHAOh\0]?Dk7]BC$'h21P0S)!]^9h"?.06j+5<,;o
:TMo@gmM_oM,$/o%:lIo`/\e&HgQo)LIsYo'0GQr(1$b;I6Q_fjJmhpIf0`dKCmfgOO(MOP.cEu
;i'GkGj#/V[Y)E@(T,LNP.jfUGUh;qSC%D)P#]<E$bf62Q"6=C5]%_(,US=2#+FW(PksHu"!E2!
YqBGPSFmnH)Co"W/,<4=PO:DLKf?nlm^:p>q2(XP9b^)YK3@.+`ZF[iE39!'q=ZU%f>1bX1^D;m
?LUB?Sr^b1hG0jjX2IO(p.d6bE1mO"!]VB<#d5&5G(Z>b0F-sc#T#ou77Lg*kZSd_rOEkJDduj(
cl_Ds?Rn^0TTL&5F],R$%*I@;f)mN,fc6Xe"aR[!S%(QrF+mR:b>?@2EZA?,2_f>.!]YG/XAH'd
Rdf5fTBS4:@&)Z@c>B)#`81s;:2W"dH`5[.C$on5,b.JY>.#te-S(DEn7*S@b0oh>$6Z(O,9=gI
-CK:BIJ>rB496Pf2EZY\)3#ul5\dIEiSs9NFY5%^h`m'1S,0!$-V*L6W2/JL:d>(AJ`P,Sr*Ms/
)Fk`t5.`?J5Kl"eWiiqe<j"8)Rfu[?84,?B"JKOJD<PhY(,i`6a/7VLM4,u3n8u"<gYdC;%b*KJ
?CP#td`^HZFr4Jec3!MgKBm]"S:_RT%#tQgl&>Pd$pFZH7Zs'M%c5G['?G(JHNZK>,kUS:VSQKD
+iu.QecI2#hLN)n#aeXf]@7HBPq,cJr;GaS["/^gce\NM_Q+j,7k/aZ<LI>t<[p_j5mEV<T<`Xp
hGS+t?eun[`o.A8n"qU?d1sK;"f5O7;Nuf3TIhS>[ABIY?,g*FJ%5>dHeaJ621fL_8BG?>>+I--
]hhTPdfCIhI`?d'G`t8/`ci%3[X5BPeRXFWffbbPn6ObF24?h54!-N0LR)A7<BSHaY(3d\,X^&S
.tW9n#UgA;7p4<%Jh,>F%d:-=1c6:7FNS\3g]\]iqJ^9c!(BM^]SF,+qYXf]K?lQN#'6,;l#^Vh
O=;pup/VB`C]j:FRX"l"rr,bf^`mMR#HXk0F_oCWJ?NJ^%6b$[bPldUEZ)U4%S,K"6/hm%JD\do
[@<#!q'sRQgX5;A,d?86d`K\\\fs\:M2`teER^Lt:B/E(U:8#gP'lk]5:"S42clX5+#+^,5n.Bu
Y)^b)Wo[sm?&:jMrZDo2MDIn*`G-ElFK#]dB8?!m(=kqeG"5Z5B]L]*oSYMn>91@9JFr,!Ft/5>
2AK2UKDIdj2nm%N0OsDgN*V1XTEmNSN3!%@NGbCLT,AVI+`>H!3k8"Rf%1IXLS]L*6RU2QTs"P+
)0VO]=\_!@aV;?8Va%J/DSrV#[r78P#QW?Y;>"&m4G7cPhbDWJ2J>_R]hS8rYd%Y5>BFAlnVgE)
,%rfVS>Lo;`TaKD?2C`dOgmd^P<qJ\X$K=\D>+Zjk[K$mmA>TXS_Wc6pom8;?R/EJR@B_1$+a^f
:V()60+Q*^E%$]J0To`:bj$h\3K8d+a_+OipZb3\^4j:45J_icDqV#&Qt5j\-dh\Bd!K^hI0Zld
59g+.^MD7WJr/+"L""0)hVu$1Yg3/R9ST3Sleu[R*-).M]cU"M"^8PXSl+\%leU<`d3Z.f/km<q
&N?c*7c/Lkcpa4+O075m+9*?2+$9$+_g%5q0As&iC5NB(+BSs*7=N#4+rV6$,U4msT7Ubg,Z?F_
8N*,:F3r-L2ma>Y!U=:1<%(;ulmn)GL]k'#b.(^X$*hot&4J0rYl<gd=,jV#ptXctTbkCB\0Yu2
T_:d@X,^FLr*aY^Nj;C+*ATi='@D:*g:?rVDb`KU`q#cm5PFOu9d7\eaBA8fqF7t7:@gYMM5.nl
F[:4lE(`r_(l1GO5.sjF<ha<bE7/1?ZgR17-(=c0M#:Tme`>n327t:JQks-;%DAH*F$ZuHkjmTS
hVJos[,R%%N:d5.ld)"mn=8T&:khc%X3:TMm9gJb!gcPn*#^!e>L6cZ1tTf@70^TapHMq*YEYo9
6lqpah8*3JgtH('TM_WUY)XoCWe0=q')&:@NMuh[Zq%)JPk8J)*X8ALPNTj;19Q4)^no3IPO58_
/q[BdK7kbk-\G34WE]iiJ=Vid64-HpT[//.b^*,\I$kO6!+EGm5$epRbh*6#3U8?TD_a6$ed?6%
-H"MCg(hnT1*>"Sf"'QHZJFA&&^U4Aj\G7+!K-k/+#?c5/(T/p3n:RjcQNa0TLb)9pG3O$n_"*<
<^a/>o]HH<"(Q2s=1S&,E]+6QR.X2A+E<ZQh1"fAn6NF9)M/S5#nr?[=1YEs?8KjCATFu/J>c_#
.#7(':@I.8dE7E@Yrmn7cB9QUq"lX/qT[Yb;oVKrA(OfY[tP+5#$k%($-S0pL1?NZQ.8ndW,/to
b*;';jSZOKm$q$TJmr)1#TiZU`a`?s0t(2d!aC)RnJjLp>3&_COs9]fEFG#"V,_4EA\G,mLH9KX
SuJ%7\:D8NRHYb4_sh>!#T[H*7m^!rOH#:p(C<7_)sIQ6Y>iGZ3<Nf/j?]NfVuuQu#90p=m]$,s
4J3ad$'KA8F0X_K3&S8t)`q7E:60N66$/`Q>fB`EDj3>J57?W-BikR^lj'*1&Bgc+AaVUVO##;&
8K;8/`U%lob(lMDqC!8<;q9hi!5qM"*-RUl"i+H!ORr]!HAUG+][O4g/-9%=K6IRh:=o^#JCQNH
gNU'o^6JOE\-e7^?>-%L+k;VWH[)/N"n3YjiIkTU]J0J@JOh^&K0TtZQAXteXm&QQ))N5#CMOq]
4OX[pGO;U;"*"XbVkKfJci0>(+knKi)kA[)kA)pFq)CKq:6DK.H'O@KIn@`BJ**H-F+q63i5:?-
g0%O"0;aeN+<Pkk7[)2Dj>@EmUK8US$Cl,!QZC7uISECj&Ql9eXGW9UWcKul1D8\gK#&GbDbI`4
'g/;8hRhK^(W56)\7mJTDF^o\mI:/6ZX7*hT[@lR13sB]6uPHj2k1AU68!WpcMK?]T&2DVJ&e"h
GB'AJqY?'6Lk@hP:S0a`_=s$#]cMS$Dh1!9rX24p&>&@'6XW^S7i4Cj2Pl[TW\[pEF=(5BbVuKn
Gt!7h<`[aP9?j`\Jk2G>nQu.Ei$Fk*#S$tJe9"P)eC]5Js0k%rYB>1:9Afl%h%&$t$VU$YNdSR)
r\sX9kV/VkgN^7+1h`e[kH)uAQ]KSlbIdd.eODYceP7A-Xqr'GhEE!pH->(6Pl`duFHQ-<DB(NA
*)1(cdJKDbbZKgs;<&uG*qK;A!ZZ@^6s4TC?n5meJV_QubRO`^J%MZ6MhJ/bn,G"j:JK0U&On5_
bb[ORJ)fO"IN'(T>'KY']@X68-?/]s];cOS]fW@imEkQ!X"*\nrbYHqioO-YrM)^?khiNh041e9
S-Fa67CG54S:3.*#V!.%;.qpjld_SMVeN>`Kgtfn<7$]50E8h3qlZ03+YL#1LYC]lVn_8_rf3n+
,`bS?+chZ*eGX##A]"#73(jnqW!m_8h[d*_4Ee4$n/61tqJFeh1m3n4r]eQ/bT>ESGV;#mH?!i2
8+$[c(\Y=UF?TD93/iE@k2MWs4g%h)`O$9HTRY4'E9uM(,XXqkY7BJdrNO\%cClNXEB7U'd@`45
:j;Akp#QjSs2:*U1,^&W^K.10(`ht8!os\kI!F30Or\f69@F]:hgENF>`>=QgaKe"ojO^HV_Y;&
e!Pa;pmt1l931r?\&e?%3WPD`Ea;.C\kADM3b"*Rc"bNV;t=?qnNi)$Il?^]`d;s6Y<DaGanaFr
+cV)Pg/-fKVT$Pk9o;-66s>QXkS"t22m/d0%FO^(,69392Em*`%3\4TX\7lZG?XJ_*5'm36,jk-
'RJI:+3uPcfW2pG%3O"!T.bX,0Yuu4!,:9F'mg@1iDCL&*WlY2h9"cgr=:u#@G(L0FWP'f-bIg-
ZYS*h_Z@5hQD/6B:VYfedE,ZMd.0/]3#jDn50p=u:A2Spi#5[\0+uR*bDj9^bfn.jJb1Sb4U>![
5aNu<S.R#m"8]l#5I,-D[G!!@3H9Y`E6r6s'lKhE+-[_m.IPdqrRgUD=4_\)/^D&c99%s4N`XXu
3B)Zd8p/+GYFTgVRB.8V[\biN3u/WCrFM"4/oVZ8Om=q0/ml?Wm/)1_f"\6-e7WK\q'+uQI>WWt
b-\T>$6A,VjgHb-p7-pu,C'f)"K+sARP(52]*.PD.>`cH2M-Q'=8#lZ8:VOJMP\=1@!4/M(79N[
iNIgsWm*m">*n151jU0+@TW2;h"2<Y]Y4cM(fSX.?*6*3!oU6,'^qYc\<fdd"NC2J!hQsDBE=D_
F[#BaB2O;_7&a2<!NLn@FfT`1%QtiI?f@T1^6k=cpZVTU&-nr0`((d`H^rHYB,^FRao6,p\<k*]
d+hGp;E)0fT-Y,CRm6O^hAf.f#^*f1gg\]?hcb0.)!=PP/dn6o;uf@W:UaS4]J!/4N8d>d7@<dY
NLD%%(K!?h])Wf6mnj0+QgNClP_MMG3N27j&VOJ95/CSK_boeFR*6UE/jdZgYa0\A]0ZHjs30<k
m[hK#Mc:fS8K)WPA,G;$f>1/pmEEW,9rK!,atoU1?EtTrrmM#54C;3-luL5LpN/*KL;"M/L&oFi
a3K(k]OtH>8pS!7mVI$?H"[VaJ)=)#FG__2#0eBb936?[d-mraQ8WC>'*/i;Ql)Hl;<_!^nEuoe
R=kcI%H(B)Wb_:<H?m%G`Bb(U7B],EgajF*.\>.W@5\t0-7p=G:*ocT1DL&?S&ck:l(FKJSJC1U
FbM04rR?M_\=`N+drmpilECm8@pPW/`H6T>GG1pUKUW9olOK9]*>=rUj>7j8"I8MgljCP/X0/TU
bL)1t"_\-78,aoBS=H>S;I40^@\'@*cs#PX+AuH]?^K3Cp%>Gh1%bbS@PTJq3\7?U]#A(\oPt1p
@2@=AH3HG(EpSt:0RqGqMl$cE:pmfl:!A\*V0qpWT*s`>>T&XnibK1/25U031<8J"I1(sYRJE8j
^kKKNX[K80jX\YV<a&P&f&[W-QB9gg!'BKsa8HaujUfht44/\2o>6fdMToNb#YGhd"`+u,!&LUR
*&,jMTOW=ifU:74i%d8jdG3/ihY$qs8"jjMTqA]AGiqj!Wj,ZQElJ<e>/!,o_^CI=^jPLAa,HAi
F]t=f^KtEL`9FBIaWb!#@Dd+LR`>H6.RdT[Unbqj!R^&:`Z/c3OV3Hu["Pd`g4kZWW[nUfPfagP
?_gOY04ea8_"hef6@H8Da:(hR(tVKk_eBh!2+3am$"A-6Q:.df+MY.4s%PA_F5$E(W5:2OT4a_>
fe,6jTL"RtriG905aJBkh$!ZOb.uV"H;N@]'@u(QRt.CCZ-s4J]@'PXqt%9S8&-]]<Qt@J%GeNS
,qO^&N/@uGO]5S.;I*jf_-G&7C!>2m%9:usASlt/eZjUZ0J."U9Yml[W=iI,$)fRP+>1EUD(5l`
`49=%O=\>.'hW0OX,r81@aljKfVm1t.F#?*?+\"0f^a/R>&-E6J_AFbBLjpL*fMUG3Ru._cCGEr
<^\407#NV<okM38X]9mR$=V+r02/F'8JJ/P^`LW=5f9!=cKig2Yb'h%d7MG7Yn^tIC;C4!WObuV
3jh-k)utgunS+0=KEJNF?nI0eMDIot3LWW,M3=#i42)EG@Gb<D2OtPh\(E<a/)]Q@N^^'0pYS#H
D7qn9*#"s'4;<*`Hc9_bq+UG<'O-i)B.PX_kld!$D']u!Fo+SNcFnQ8"M46q&KD=)*77u^HI/$t
OfEIBHQK6t%IJY)dN&DGmX*)_al`r-/\f^B)I<B40G7),iFJ>#FrhVQm/P)k%(9Yton4NdJqglA
kX`>-qBBZ#,:aGmF[_an;Z;NQPD1DLrV]^RP(c1,`ib0Lej^%C#%^*3K-$4c[li@HL\u,1Eos0j
j_2VYE.rlgB)R6dN"N(q_YC;,6g`7p<u/+LYJ)+8UT<@X7h:(S3`)2FP%.DSeN,tKWiKu,G?S(l
R(mkE]7M&=itd4!?s3<[et=7ghA:VErXR4S['V^"QCe8G.EHu0d?krJWB5_,HGlNCc??Rb!7Z?C
JiBe<%ImX9f(tBU@:&jncb]ZP1ugBeadqb'e'n^IkJbsseQGO<>>"^1%O5H_gppl(VtWXT+^ccQ
BVA\D`scIXkkrkV,:K;?L!@FqKu.5/IX6Gi^E.M36s$2<!7(klb6neWqbU#u7Ac1P>SPlVi\.h4
0jJH8rfqo/*Cf!0YAeu#k/!,CCMgKni$)a)rW$pL2.OH^J(pQ1+ai^]CI9;SY8cTpE%)b-7m=T_
#G:l,\/oX=D&\1`5S8G9AD$U+?"&22]3<LN45"XQ_#5#$]KS:kZ6LL]^oCCcXlh_t[+uF<nLJu%
o4p/1(<#NLR.W$rX$:8\"H0rX*]_TFNZJ-,I3#J#@=dL]XF]R!6o8`"*+'fng%ebU,t0SK*.oFi
;7-@FgddF>4T=I""m9c,mt$8PNqeOBe"IkdDk73j"bEX]+i4?@*FL[WfO)u"^#MZ&\MJUNjNt/_
!F^<T[;A_:Q!6c4DVSten4&g%V[@nP*BS*GZ]QkkF#?sdlF>P-^lped0#rC;.Sl:c(4%V]n^IF,
Hs9KC9_[!e[5'D\nMIDppEa(p]]88g-di?"l-#+NfAUe!Gmn=W/")+RjsbiojRAloPNnX]<QFk=
\<-Zoj+06k*ENn]#C*a`/(PXHMi+S,b=^\ZmlE"%\tkRikKZHW^f2e_rLMb(^f@48,(!+YnXc%,
??8RV1\:DK[i>X4j7=MOT-&#"@V.56p6UYI0t]pCMN6L7dL^cj<.hUG=H#,i)5"CrUg'HNI^&fs
ldK'!r5TJJ14R`1r;7>DF2RJ'B/a^UH@PndKn;0ga.":HL'WM16A3V(g7"Mc"OMh]kc,i/%[\Yc
HC7a/#!&*!o\X=YP#@tR&mh#(>'<`?d1l2GigbA<cgLIq11[#(8k0^<KT.fF6=.&cB)iZ/:o#_h
/]uOeX,N4)FJ&W>ge:`2;AAQD/4Ir4WfgVh_^VIG,%J@,]:`8)$jo:SglQ2gFUmS<(lZ4*m@bAC
oaD34dM(QKe2hjY.,iioWp20*79i"U=B/kAXoq_qC(kCCQ1A1-O>oU"@03);/75Y)W]7C==MScZ
(FIr.m\hQVYCdl4)RPb=I."ue.Js),J%&6?)CgZg99.P9.OouaR$C/=8F$uVrZnsl&UKd=c-"2J
e`bT:MPEo-Fb`[d)t<7p^^)3Q"nY(;;fF3iAjjE&"EZ<O3<K$T^Q!>MgS^WmWGUTIcpf6)i[&3Z
1P(nuPT!PQ110ESP]"W!JmqPS?moKM_JnthV(as2.'#T6Gj->&1HQgWm@C:W.tJ%`Fd^c_cK39s
e!!r5F9mjPYWOXV.:V[1,Cg:i*\E1h#I3T=Q=f)]f2ku&):V)1P@,^/MYn(a!ZiH[nK[7o2dsC6
T^%]?@U,(]O^T#nC\N4nm%I^Ja8NCb;pWF=OjdiUefFkAc'-"p4^i>D7%dp\T706m0UEktJM1=h
E>gs4T\#\-cqA.uB*;#h_iW/bcQdh)L/.mfimYgk-,jKU,!mK`NP$1-J8ntEe<C]h9.!N:5UI4M
PuM+%clK:Ohh<+!i!AfWJ0&-\ZQ-8\:1oe:3*h*4IX]jgmfDHsTCpn9)u$&HI8=G^j%CUM`B,Tc
FDB['j^7=qq3j'fmV,F3H)]&i/<LVS?o&%6^@MLPd)`3MA[IhchWB?bk%,"VN\@p[nKjk-p#XTM
e`-.qbj=-WF?sY68EOfo)aor;*#>,@]+.$"i(OV#ET>)h>X&h5RZHaHdad$<(TF(36c[KDD#'_p
i7=DBL8).1QR:\F+i@;Ak_j6mrqVW$0<5e$<L'^ZUGPIgXV>Tdo3\ql&n;f`nuR[*nabHt<AK',
M#C+E5Lo&u#1RJ7>[)5GDS?PKifb!b@nY9TZNNWo/Bhi:*,`#`aN&oS&,olsAB<dS0+u5'"b?'HHN~>
endstream
endobj
11 0 obj
<</Type/FontDescriptor/FontName/QGTUCD+Helvetica-Bold/FontBBox[0 -23 522 724]/Flags 65568
/Ascent 724
/CapHeight 724
/Descent -23
/ItalicAngle 0
/StemV 78
/MissingWidth 500
/CharSet(/four/one/three/two)/FontFile3 130 0 R>>
endobj
130 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 736>>stream
Gaqcp>t@n&(rtO?O0d:r]%gJ@](m7TIPf`T;H(5!LD`dBU..]85#,agNn\Mo\-lqP@X(?Y@G+(e
Zq)SuEoKMV(Q(.?70S*)(D0Uhe6U#ab3MK/5t!XB&&7<%4?S)tkqn3)(fR%LVhCi[$95V,Ek$dk
82WbL1rQ7kOsILSdG'cOejc(ECDC0b5[Kje\cOW6(u'VK$o9dtf+X(?7jKgP`!sbJqAYonp\c<h
O2lm*l+[nu'bZZH`V!u0''*/B=GS:cEK=kXZ4t0MS;p)P3"QQ-iR6G:J1R52]ojqcj09;9k\7tQ
Vpja(9Da5r*#q]2@tA:pqf(fsrs1q^kAn&?+_4%XZkHT)?;6B#W#f5T1e\.b;GL8X49Ldt[4k1l
X]sh92c$k!7e_*;d;jqV0pE*F+DG5OAZ1>^W_$fr_Fdn_q;Uf>cOXF[p0^Vjc@O71Kf7Amm;94E
9"C2"@#(``qf1lJo4Q#cDqBe=SQ'C&]]ZBb19KV.MH*G"JL<BADh_VLkr->BQIdf!Dlca!fpOp#
O#-N^MP'3!F*ccK=F<2IV_r:VmbVp#*ef7/+()k`8R1RdY-iY+\[(_o726YDhc!b"TpS&TO$tgV
MN=6W?&!1cC@9gRc23F0'nok!P`C!@idoeip.p"=!QW");Q_"p[2pTAeAK_FX^4.J_@gtl#1kp=
4U7LBp9W*Vlh^0_JLooV.mI-D_.\M5m9lIGH)S@#QQbu?A=<.B~>
endstream
endobj
9 0 obj
<</Type/FontDescriptor/FontName/HRTMQV+Times-Bold/FontBBox[-24 -19 476 691]/Flags 65568
/Ascent 691
/CapHeight 691
/Descent -19
/ItalicAngle 0
/StemV 71
/MissingWidth 500
/CharSet(/colon/eight/five/four/nine/one/seven/slash/three/two/zero)/FontFile3 131 0 R>>
endobj
131 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 1514>>stream
Gar?.HV@@^'ZY]idbCBlR8U4lK_B9b(;\ZZSJHrI5olGf6.Dl!"aY#9I6e5T##+2iaDWgm-TIZ=
ZQNG='f7sK2oJ77,bg.c0pb<F[Q0=oA;TJ-5IRYT/GirWS=Jd*S:#Ap'HVuGL5F!\fEBgm`=Aqg
1e\O[1La%F(b9TO6t^J,1_qZ-,b73]&g@iN*#!cO$9BM"o*_dF,*FX=k9F?2_c]oH0q$k1Ap)ta
`2'3is"ZXK?I+tfr*/-d"II)<k7^0WQ!e_oD1^T7`b1%;X]A(DDmIqRbq?`_BG?E#@r$t(65dPf
@^S1dN[eA!RE2:>[CY$71G@?h/#dX\Gn+&`S^2HBq;m!a@'inera.nr7Ej0E;I5bQDuKfd.RFfr
,SYqHBJSSo'Jp7J;)F`%j<6Z_GfZjMrCf?&`r$OZ334Z)PW0rU@Ug\Y4l0S(Q[s_G1/>m</Usmh
rl@QdN=DFEALHMj'Sq;S#rDmn\2R!fTd6rq^N)58J8*+YF=&DeHO>U+#R.OWM/oViO\Hfu\LmbC
k8*qVokoB5Gm6R0L)LpT[9Yt?hO?lFW^:ge'0A706Yga/,Cs&B38Hq>Bt<Sok.T$a]8u;os*-cE
m4FS,l4Hc\o[U@<-L;?iHnt*Wg&pCW(2q8`0q]5%J7YAq@O,CdQoGmtc[9q,4M`k2Kid6pDsn[\
61-4p0>'s*\dd1:ZcZs_[Q$$]-gSNnU@TQh6b5EfQs-Qa3f'7B4S`RShbH*Hdfc\iDK5+.P55RG
d!&=uJ:n>=V^``o(;3u!Q0uQI&:CUhFEt=JS8;-Ub.b?/f*3d.ERShj<4!f0;^bo0o!ELU<Z-7$
#AjSO:7#Pb(":Kj#1J*VKX5g!mDmaW^=q/d6WimJH>hQc_<=D"?cQq;f#?a3M<'AI+;&bQ..BPc
SH1OD.Xi2AYa6#iUrcXiUm#Lrp7)l>8h,N*BUhcd(uc_,)G!t615-&d#]N'JibZ4ND?g=iNk6rq
7.Df5IeGTHV">-YM`uKnrR?i`ou^]5Iic_OWsj__DJ/:?;Urc>g\u5F:$!,P24)S*TSIO%_2EfW
omefH[ErC]:qm6rh'a=t=@OhP0&T4]Z3FJUD.hV+q`Z)E(eRq70G9I2)>g>7i8gY1SM5VL!>hK0
W=gDPL/)%^pUE>H]:lmSm\geT!QRE0"q"0kIK8p\2I>L#</TF+^H?f,HM$^mQY6MmT!IE'Q/XO?
319g48dt9'h#,WT"6:*_$O$;YFVU_hCiaMQW"LQAJ6D4h,E)%1RnHfFRehdE>5T`Q8!Rr\!r33&
5/MD,18mJhnMbF&H\^>D&,pS;ic>/.%#a7uPk&pZ:.&OUptKMuoQ9HqoS@6,9hp+r`n<*A@>J]6
B\M.LC\plQqfN&)\-G;)\FnMMp<U1W>LWltqj*<pinRPb=G.pX;$3W39Lre='sq5>?nC"Cf[P,J
kJZ%;Tsm8r2o?",TkJj^e%*2aSkuSf5TO"p'oTc0f#r5t#<nlo>:p0[Y^?L=rr>4Q/Kt~>
endstream
endobj
133 0 obj
<</Type/Metadata
/Subtype/XML/Length 1408>>stream
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='bdbc5430-b0e0-11ef-0000-f536c657c205' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 8.70'/>
<rdf:Description rdf:about='bdbc5430-b0e0-11ef-0000-f536c657c205' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2014-11-30T11:07:56-08:00</xmp:ModifyDate>
<xmp:CreateDate>2014-11-30T11:07:56-08:00</xmp:CreateDate>
<xmp:CreatorTool>GNU enscript 1.6.4</xmp:CreatorTool></rdf:Description>
<rdf:Description rdf:about='bdbc5430-b0e0-11ef-0000-f536c657c205' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='bdbc5430-b0e0-11ef-0000-f536c657c205'/>
<rdf:Description rdf:about='bdbc5430-b0e0-11ef-0000-f536c657c205' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>List.source.ps</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>Andrew Charles Edwards</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                        
                                                                        
<?xpacket end='w'?>
endstream
endobj
2 0 obj
<</Producer(GPL Ghostscript 8.70)
/CreationDate(D:20141130110756-08'00')
/ModDate(D:20141130110756-08'00')
/Title(List.source.ps)
/Author(Andrew Charles Edwards)
/Creator(GNU enscript 1.6.4)>>endobj
xref
0 134
0000000000 65535 f 
0000060834 00000 n 
0000083549 00000 n 
0000060615 00000 n 
0000057076 00000 n 
0000000009 00000 n 
0000003111 00000 n 
0000060900 00000 n 
0000064250 00000 n 
0000080171 00000 n 
0000064075 00000 n 
0000079094 00000 n 
0000063092 00000 n 
0000064449 00000 n 
0000063453 00000 n 
0000068438 00000 n 
0000060941 00000 n 
0000060971 00000 n 
0000057227 00000 n 
0000003131 00000 n 
0000006596 00000 n 
0000061034 00000 n 
0000061064 00000 n 
0000057380 00000 n 
0000006617 00000 n 
0000008287 00000 n 
0000061127 00000 n 
0000061157 00000 n 
0000057533 00000 n 
0000008308 00000 n 
0000011159 00000 n 
0000061220 00000 n 
0000061250 00000 n 
0000057686 00000 n 
0000011180 00000 n 
0000013859 00000 n 
0000061313 00000 n 
0000061343 00000 n 
0000057839 00000 n 
0000013880 00000 n 
0000016868 00000 n 
0000061406 00000 n 
0000061436 00000 n 
0000057992 00000 n 
0000016889 00000 n 
0000017666 00000 n 
0000061499 00000 n 
0000061529 00000 n 
0000058145 00000 n 
0000017686 00000 n 
0000020384 00000 n 
0000061592 00000 n 
0000061622 00000 n 
0000058298 00000 n 
0000020405 00000 n 
0000022140 00000 n 
0000061685 00000 n 
0000061715 00000 n 
0000058451 00000 n 
0000022161 00000 n 
0000024560 00000 n 
0000061778 00000 n 
0000061808 00000 n 
0000058604 00000 n 
0000024581 00000 n 
0000027614 00000 n 
0000061871 00000 n 
0000061901 00000 n 
0000058757 00000 n 
0000027635 00000 n 
0000031021 00000 n 
0000061964 00000 n 
0000061994 00000 n 
0000058910 00000 n 
0000031042 00000 n 
0000032671 00000 n 
0000062057 00000 n 
0000062087 00000 n 
0000059063 00000 n 
0000032692 00000 n 
0000035609 00000 n 
0000062150 00000 n 
0000062180 00000 n 
0000059216 00000 n 
0000035630 00000 n 
0000039029 00000 n 
0000062243 00000 n 
0000062273 00000 n 
0000059369 00000 n 
0000039050 00000 n 
0000041201 00000 n 
0000062336 00000 n 
0000062366 00000 n 
0000059522 00000 n 
0000041222 00000 n 
0000044013 00000 n 
0000062429 00000 n 
0000062459 00000 n 
0000059675 00000 n 
0000044034 00000 n 
0000046440 00000 n 
0000062522 00000 n 
0000062553 00000 n 
0000059830 00000 n 
0000046462 00000 n 
0000049099 00000 n 
0000062617 00000 n 
0000062648 00000 n 
0000059987 00000 n 
0000049121 00000 n 
0000051034 00000 n 
0000062712 00000 n 
0000062743 00000 n 
0000060144 00000 n 
0000051056 00000 n 
0000053555 00000 n 
0000062807 00000 n 
0000062838 00000 n 
0000060301 00000 n 
0000053577 00000 n 
0000054669 00000 n 
0000062902 00000 n 
0000062933 00000 n 
0000060458 00000 n 
0000054691 00000 n 
0000057054 00000 n 
0000062997 00000 n 
0000063028 00000 n 
0000064747 00000 n 
0000069108 00000 n 
0000079333 00000 n 
0000080446 00000 n 
0000063969 00000 n 
0000082063 00000 n 
trailer
<< /Size 134 /Root 1 0 R /Info 2 0 R
/ID [<A249243D05DC88E0CA566DD363CC48DE><A249243D05DC88E0CA566DD363CC48DE>]
>>
startxref
83756
%%EOF
